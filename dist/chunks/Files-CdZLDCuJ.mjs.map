{"version":3,"file":"Files-CdZLDCuJ.mjs","sources":["../../apps/files/src/services/WebdavClient.ts","../../apps/files/src/utils/hashUtils.ts","../../apps/files/src/services/Files.ts"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { createClient, getPatcher } from 'webdav'\nimport { generateRemoteUrl } from '@nextcloud/router'\nimport { getCurrentUser, getRequestToken, onRequestTokenUpdate } from '@nextcloud/auth'\n\nexport const rootPath = `/files/${getCurrentUser()?.uid}`\nexport const defaultRootUrl = generateRemoteUrl('dav' + rootPath)\n\nexport const getClient = (rootUrl = defaultRootUrl) => {\n\tconst client = createClient(rootUrl)\n\n\t// set CSRF token header\n\tconst setHeaders = (token: string | null) => {\n\t\tclient?.setHeaders({\n\t\t\t// Add this so the server knows it is an request from the browser\n\t\t\t'X-Requested-With': 'XMLHttpRequest',\n\t\t\t// Inject user auth\n\t\t\trequesttoken: token ?? '',\n\t\t});\n\t}\n\n\t// refresh headers when request token changes\n\tonRequestTokenUpdate(setHeaders)\n\tsetHeaders(getRequestToken())\n\n\t/**\n\t * Allow to override the METHOD to support dav REPORT\n\t *\n\t * @see https://github.com/perry-mitchell/webdav-client/blob/8d9694613c978ce7404e26a401c39a41f125f87f/source/request.ts\n\t */\n\tconst patcher = getPatcher()\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\t// https://github.com/perry-mitchell/hot-patcher/issues/6\n\tpatcher.patch('fetch', (url: string, options: RequestInit): Promise<Response> => {\n\t\tconst headers = options.headers as Record<string, string>\n\t\tif (headers?.method) {\n\t\t\toptions.method = headers.method\n\t\t\tdelete headers.method\n\t\t}\n\t\treturn fetch(url, options)\n\t})\n\n\treturn client;\n}\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nexport const hashCode = function(str: string): number {\n\treturn str.split('').reduce(function(a, b) {\n\t\ta = ((a << 5) - a) + b.charCodeAt(0)\n\t\treturn a & a\n\t}, 0)\n}\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport type { ContentsWithRoot } from '@nextcloud/files'\nimport type { FileStat, ResponseDataDetailed, DAVResultResponseProps } from 'webdav'\n\nimport { CancelablePromise } from 'cancelable-promise'\nimport { File, Folder, davParsePermissions, davGetDefaultPropfind } from '@nextcloud/files'\nimport { generateRemoteUrl } from '@nextcloud/router'\nimport { getCurrentUser } from '@nextcloud/auth'\n\nimport { getClient, rootPath } from './WebdavClient'\nimport { hashCode } from '../utils/hashUtils'\nimport logger from '../logger'\n\nconst client = getClient()\n\ninterface ResponseProps extends DAVResultResponseProps {\n\tpermissions: string,\n\tfileid: number,\n\tsize: number,\n}\n\nexport const resultToNode = function(node: FileStat): File | Folder {\n\tconst userId = getCurrentUser()?.uid\n\tif (!userId) {\n\t\tthrow new Error('No user id found')\n\t}\n\n\tconst props = node.props as ResponseProps\n\tconst permissions = davParsePermissions(props?.permissions)\n\tconst owner = (props['owner-id'] || userId).toString()\n\n\tconst source = generateRemoteUrl('dav' + rootPath + node.filename)\n\tconst id = props?.fileid < 0\n\t\t? hashCode(source)\n\t\t: props?.fileid as number || 0\n\n\tconst nodeData = {\n\t\tid,\n\t\tsource,\n\t\tmtime: new Date(node.lastmod),\n\t\tmime: node.mime || 'application/octet-stream',\n\t\tsize: props?.size as number || 0,\n\t\tpermissions,\n\t\towner,\n\t\troot: rootPath,\n\t\tattributes: {\n\t\t\t...node,\n\t\t\t...props,\n\t\t\thasPreview: props?.['has-preview'],\n\t\t\tfailed: props?.fileid < 0,\n\t\t},\n\t}\n\n\tdelete nodeData.attributes.props\n\n\treturn node.type === 'file'\n\t\t? new File(nodeData)\n\t\t: new Folder(nodeData)\n}\n\nexport const getContents = (path = '/'): Promise<ContentsWithRoot> => {\n\tconst controller = new AbortController()\n\tconst propfindPayload = davGetDefaultPropfind()\n\n\treturn new CancelablePromise(async (resolve, reject, onCancel) => {\n\t\tonCancel(() => controller.abort())\n\t\ttry {\n\t\t\tconst contentsResponse = await client.getDirectoryContents(path, {\n\t\t\t\tdetails: true,\n\t\t\t\tdata: propfindPayload,\n\t\t\t\tincludeSelf: true,\n\t\t\t\tsignal: controller.signal,\n\t\t\t}) as ResponseDataDetailed<FileStat[]>\n\n\t\t\tconst root = contentsResponse.data[0]\n\t\t\tconst contents = contentsResponse.data.slice(1)\n\t\t\tif (root.filename !== path) {\n\t\t\t\tthrow new Error('Root node does not match requested path')\n\t\t\t}\n\n\t\t\tresolve({\n\t\t\t\tfolder: resultToNode(root) as Folder,\n\t\t\t\tcontents: contents.map(result => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn resultToNode(result)\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tlogger.error(`Invalid node detected '${result.basename}'`, { error })\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\t\t\t\t}).filter(Boolean) as File[],\n\t\t\t})\n\t\t} catch (error) {\n\t\t\treject(error)\n\t\t}\n\t})\n}\n"],"names":["_a","rootPath","getCurrentUser","defaultRootUrl","generateRemoteUrl","getClient","rootUrl","client","createClient","setHeaders","token","onRequestTokenUpdate","getRequestToken","getPatcher","url","options","headers","hashCode","str","a","b","resultToNode","node","userId","props","permissions","davParsePermissions","owner","source","nodeData","File","Folder","getContents","path","controller","propfindPayload","davGetDefaultPropfind","CancelablePromise","resolve","reject","onCancel","contentsResponse","root","contents","result","error","logger"],"mappings":";+NAAA,IAAAA,EASO,MAAMC,EAAW,UAAU,QAAeD,EAAAE,MAAf,KAAkB,OAAAF,EAAA,GAAA,EACvCG,EAAiBC,EAAkB,MAAQH,CAAQ,EAEnDI,EAAY,CAACC,EAAUH,IAAmB,CAChD,MAAAI,EAASC,EAAaF,CAAO,EAG7BG,EAAcC,GAAyB,CAC5CH,WAAQ,WAAW,CAElB,mBAAoB,iBAEpB,aAAcG,GAAAA,KAAAA,EAAS,EAAA,EACxB,EAIDC,OAAAA,EAAqBF,CAAU,EAC/BA,EAAWG,GAAiB,EAOZC,IAIR,MAAM,QAAS,CAACC,EAAaC,IAA4C,CAChF,MAAMC,EAAUD,EAAQ,QACxB,kBAAa,SACZA,EAAQ,OAASC,EAAQ,OACzB,OAAOA,EAAQ,QAET,MAAMF,EAAKC,CAAO,CAAA,CACzB,EAEMR,CACR,EC3CaU,EAAW,SAASC,EAAqB,CACrD,OAAOA,EAAI,MAAM,EAAE,EAAE,OAAO,SAASC,EAAGC,EAAG,CAC1C,OAAAD,GAAMA,GAAK,GAAKA,EAAKC,EAAE,WAAW,CAAC,EAC5BD,EAAIA,GACT,CAAC,CACL,ECMMZ,EAASF,EAAU,EAQZgB,EAAe,SAASC,EAA+B,CAxBpE,IAAAtB,EAyBO,MAAAuB,GAASvB,EAAeE,EAAA,IAAf,KAAkB,OAAAF,EAAA,IACjC,GAAI,CAACuB,EACE,MAAA,IAAI,MAAM,kBAAkB,EAGnC,MAAMC,EAAQF,EAAK,MACbG,EAAcC,EAAoBF,iBAAO,WAAW,EACpDG,GAASH,EAAM,UAAU,GAAKD,GAAQ,WAEtCK,EAASxB,EAAkB,MAAQH,EAAWqB,EAAK,QAAQ,EAK3DO,EAAW,CAChB,qBALiB,QAAS,EACxBZ,EAASW,CAAM,oBACR,SAAoB,EAI7B,OAAAA,EACA,MAAO,IAAI,KAAKN,EAAK,OAAO,EAC5B,KAAMA,EAAK,MAAQ,2BACnB,uBAAa,OAAkB,EAC/B,YAAAG,EACA,MAAAE,EACA,KAAM1B,EACN,WAAY,CACX,GAAGqB,EACH,GAAGE,EACH,WAAoBA,iBAAA,eACpB,yBAAe,QAAS,CACzB,CAAA,EAGD,OAAOK,OAAAA,EAAS,WAAW,MAEpBP,EAAK,OAAS,OAClB,IAAIQ,EAAKD,CAAQ,EACjB,IAAIE,EAAOF,CAAQ,CACvB,EAEaG,EAAc,CAACC,EAAO,MAAmC,CAC/D,MAAAC,EAAa,IAAI,gBACjBC,EAAkBC,IAExB,OAAO,IAAIC,EAAkB,MAAOC,EAASC,EAAQC,IAAa,CACxDA,EAAA,IAAMN,EAAW,MAAA,CAAO,EAC7B,GAAA,CACH,MAAMO,EAAmB,MAAMlC,EAAO,qBAAqB0B,EAAM,CAChE,QAAS,GACT,KAAME,EACN,YAAa,GACb,OAAQD,EAAW,MAAA,CACnB,EAEKQ,EAAOD,EAAiB,KAAK,CAAC,EAC9BE,EAAWF,EAAiB,KAAK,MAAM,CAAC,EAC1C,GAAAC,EAAK,WAAaT,EACf,MAAA,IAAI,MAAM,yCAAyC,EAGlDK,EAAA,CACP,OAAQjB,EAAaqB,CAAI,EACzB,SAAUC,EAAS,IAAcC,GAAA,CAC5B,GAAA,CACH,OAAOvB,EAAauB,CAAM,QAClBC,EAAO,CACf,OAAAC,EAAO,MAAM,0BAA0B,OAAAF,EAAO,SAAQ,GAAK,EAAA,CAAE,MAAAC,EAAO,EAC7D,IACR,CAAA,CACA,EAAE,OAAO,OAAO,CAAA,CACjB,QACOA,EAAO,CACfN,EAAOM,CAAK,CACb,CAAA,CACA,CACF"}