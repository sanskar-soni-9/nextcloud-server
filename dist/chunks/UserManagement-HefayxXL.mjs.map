{"version":3,"file":"UserManagement-HefayxXL.mjs","sources":["../../apps/settings/src/components/Users/VirtualList.vue","../../apps/settings/src/components/Users/NewUserDialog.vue","../../apps/settings/src/components/Users/UserListFooter.vue","../../apps/settings/src/components/Users/UserListHeader.vue","../../apps/settings/src/components/Users/UserRowActions.vue","../../apps/settings/src/mixins/UserRowMixin.js","../../apps/settings/src/components/Users/UserRow.vue","../../apps/settings/src/components/UserList.vue","../../apps/settings/src/views/UserManagement.vue"],"sourcesContent":["<!--\n  - SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<table class=\"user-list\">\n\t\t<slot name=\"before\" />\n\n\t\t<thead ref=\"thead\"\n\t\t\trole=\"rowgroup\"\n\t\t\tclass=\"user-list__header\">\n\t\t\t<slot name=\"header\" />\n\t\t</thead>\n\n\t\t<tbody :style=\"tbodyStyle\"\n\t\t\tclass=\"user-list__body\">\n\t\t\t<component :is=\"dataComponent\"\n\t\t\t\tv-for=\"(item, i) in renderedItems\"\n\t\t\t\t:key=\"item[dataKey]\"\n\t\t\t\t:user=\"item\"\n\t\t\t\t:visible=\"(i >= bufferItems || index <= bufferItems) && (i < shownItems - bufferItems)\"\n\t\t\t\tv-bind=\"extraProps\" />\n\t\t</tbody>\n\n\t\t<tfoot ref=\"tfoot\"\n\t\t\tv-element-visibility=\"handleFooterVisibility\"\n\t\t\trole=\"rowgroup\"\n\t\t\tclass=\"user-list__footer\">\n\t\t\t<slot name=\"footer\" />\n\t\t</tfoot>\n\t</table>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport { vElementVisibility } from '@vueuse/components'\nimport { debounce } from 'debounce'\n\nimport logger from '../../logger.ts'\n\nVue.directive('elementVisibility', vElementVisibility)\n\n// Items to render before and after the visible area\nconst bufferItems = 3\n\nexport default Vue.extend({\n\tname: 'VirtualList',\n\n\tprops: {\n\t\tdataComponent: {\n\t\t\ttype: [Object, Function],\n\t\t\trequired: true,\n\t\t},\n\t\tdataKey: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tdataSources: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t\titemHeight: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t\textraProps: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => ({}),\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tbufferItems,\n\t\t\tindex: 0,\n\t\t\theaderHeight: 0,\n\t\t\ttableHeight: 0,\n\t\t\tresizeObserver: null as ResizeObserver | null,\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tstartIndex() {\n\t\t\treturn Math.max(0, this.index - bufferItems)\n\t\t},\n\n\t\tshownItems() {\n\t\t\treturn Math.ceil((this.tableHeight - this.headerHeight) / this.itemHeight) + bufferItems * 2\n\t\t},\n\n\t\trenderedItems() {\n\t\t\treturn this.dataSources.slice(this.startIndex, this.startIndex + this.shownItems)\n\t\t},\n\n\t\ttbodyStyle() {\n\t\t\tconst isOverScrolled = this.startIndex + this.shownItems > this.dataSources.length\n\t\t\tconst lastIndex = this.dataSources.length - this.startIndex - this.shownItems\n\t\t\tconst hiddenAfterItems = Math.min(this.dataSources.length - this.startIndex, lastIndex)\n\t\t\treturn {\n\t\t\t\tpaddingTop: `${this.startIndex * this.itemHeight}px`,\n\t\t\t\tpaddingBottom: isOverScrolled ? 0 : `${hiddenAfterItems * this.itemHeight}px`,\n\t\t\t}\n\t\t},\n\t},\n\n\tmounted() {\n\t\tconst root = this.$el as HTMLElement\n\t\tconst tfoot = this.$refs?.tfoot as HTMLElement\n\t\tconst thead = this.$refs?.thead as HTMLElement\n\n\t\tthis.resizeObserver = new ResizeObserver(debounce(() => {\n\t\t\tthis.headerHeight = thead?.clientHeight ?? 0\n\t\t\tthis.tableHeight = root?.clientHeight ?? 0\n\t\t\tlogger.debug('VirtualList resizeObserver updated')\n\t\t\tthis.onScroll()\n\t\t}, 100, false))\n\n\t\tthis.resizeObserver.observe(root)\n\t\tthis.resizeObserver.observe(tfoot)\n\t\tthis.resizeObserver.observe(thead)\n\n\t\tthis.$el.addEventListener('scroll', this.onScroll)\n\t},\n\n\tbeforeDestroy() {\n\t\tif (this.resizeObserver) {\n\t\t\tthis.resizeObserver.disconnect()\n\t\t}\n\t},\n\n\tmethods: {\n\t\thandleFooterVisibility(visible: boolean) {\n\t\t\tif (visible) {\n\t\t\t\tthis.$emit('scroll-end')\n\t\t\t}\n\t\t},\n\n\t\tonScroll() {\n\t\t\t// Max 0 to prevent negative index\n\t\t\tthis.index = Math.max(0, Math.round(this.$el.scrollTop / this.itemHeight))\n\t\t},\n\t},\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.user-list {\n\t--avatar-cell-width: 48px;\n\t--cell-padding: 7px;\n\t--cell-width: 200px;\n\t--cell-width-large: 300px;\n\t--cell-min-width: calc(var(--cell-width) - (2 * var(--cell-padding)));\n\t--sticky-column-z-index: calc(var(--vs-dropdown-z-index) + 1); // Keep the sticky column on top of the select dropdown\n\n\t// Necessary for virtual scroll optimized rendering\n\tdisplay: block;\n\toverflow: auto;\n\theight: 100%;\n\n\t&__header,\n\t&__footer {\n\t\tposition: sticky;\n\t\t// Fix sticky positioning in Firefox\n\t\tdisplay: block;\n\t}\n\n\t&__header {\n\t\ttop: 0;\n\t\tz-index: calc(var(--sticky-column-z-index) + 1);\n\t}\n\n\t&__footer {\n\t\tleft: 0;\n\t}\n\n\t&__body {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: 100%;\n\t}\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<NcDialog class=\"dialog\"\n\t\tsize=\"small\"\n\t\t:name=\"t('settings', 'New account')\"\n\t\tout-transition\n\t\tv-on=\"$listeners\">\n\t\t<form id=\"new-user-form\"\n\t\t\tclass=\"dialog__form\"\n\t\t\tdata-test=\"form\"\n\t\t\t:disabled=\"loading.all\"\n\t\t\t@submit.prevent=\"createUser\">\n\t\t\t<NcTextField ref=\"username\"\n\t\t\t\tclass=\"dialog__item\"\n\t\t\t\tdata-test=\"username\"\n\t\t\t\t:value.sync=\"newUser.id\"\n\t\t\t\t:disabled=\"settings.newUserGenerateUserID\"\n\t\t\t\t:label=\"usernameLabel\"\n\t\t\t\tautocapitalize=\"none\"\n\t\t\t\tautocomplete=\"off\"\n\t\t\t\tspellcheck=\"false\"\n\t\t\t\tpattern=\"[a-zA-Z0-9 _\\.@\\-']+\"\n\t\t\t\trequired />\n\t\t\t<NcTextField class=\"dialog__item\"\n\t\t\t\tdata-test=\"displayName\"\n\t\t\t\t:value.sync=\"newUser.displayName\"\n\t\t\t\t:label=\"t('settings', 'Display name')\"\n\t\t\t\tautocapitalize=\"none\"\n\t\t\t\tautocomplete=\"off\"\n\t\t\t\tspellcheck=\"false\" />\n\t\t\t<span v-if=\"!settings.newUserRequireEmail\"\n\t\t\t\tid=\"password-email-hint\"\n\t\t\t\tclass=\"dialog__hint\">\n\t\t\t\t{{ t('settings', 'Either password or email is required') }}\n\t\t\t</span>\n\t\t\t<NcPasswordField ref=\"password\"\n\t\t\t\tclass=\"dialog__item\"\n\t\t\t\tdata-test=\"password\"\n\t\t\t\t:value.sync=\"newUser.password\"\n\t\t\t\t:minlength=\"minPasswordLength\"\n\t\t\t\t:maxlength=\"469\"\n\t\t\t\taria-describedby=\"password-email-hint\"\n\t\t\t\t:label=\"newUser.mailAddress === '' ? t('settings', 'Password (required)') : t('settings', 'Password')\"\n\t\t\t\tautocapitalize=\"none\"\n\t\t\t\tautocomplete=\"new-password\"\n\t\t\t\tspellcheck=\"false\"\n\t\t\t\t:required=\"newUser.mailAddress === ''\" />\n\t\t\t<NcTextField class=\"dialog__item\"\n\t\t\t\tdata-test=\"email\"\n\t\t\t\ttype=\"email\"\n\t\t\t\t:value.sync=\"newUser.mailAddress\"\n\t\t\t\taria-describedby=\"password-email-hint\"\n\t\t\t\t:label=\"newUser.password === '' || settings.newUserRequireEmail ? t('settings', 'Email (required)') : t('settings', 'Email')\"\n\t\t\t\tautocapitalize=\"none\"\n\t\t\t\tautocomplete=\"off\"\n\t\t\t\tspellcheck=\"false\"\n\t\t\t\t:required=\"newUser.password === '' || settings.newUserRequireEmail\" />\n\t\t\t<div class=\"dialog__item\">\n\t\t\t\t<NcSelect class=\"dialog__select\"\n\t\t\t\t\t:input-label=\"!settings.isAdmin ? t('settings', 'Groups (required)') : t('settings', 'Groups')\"\n\t\t\t\t\t:placeholder=\"t('settings', 'Set account groups')\"\n\t\t\t\t\t:disabled=\"loading.groups || loading.all\"\n\t\t\t\t\t:options=\"canAddGroups\"\n\t\t\t\t\t:value=\"newUser.groups\"\n\t\t\t\t\tlabel=\"name\"\n\t\t\t\t\t:close-on-select=\"false\"\n\t\t\t\t\t:multiple=\"true\"\n\t\t\t\t\t:taggable=\"true\"\n\t\t\t\t\t:required=\"!settings.isAdmin\"\n\t\t\t\t\t@input=\"handleGroupInput\"\n\t\t\t\t\t@option:created=\"createGroup\" />\n\t\t\t\t\t<!-- If user is not admin, he is a subadmin.\n\t\t\t\t\t\tSubadmins can't create users outside their groups\n\t\t\t\t\t\tTherefore, empty select is forbidden -->\n\t\t\t</div>\n\t\t\t<div v-if=\"subAdminsGroups.length > 0\"\n\t\t\t\tclass=\"dialog__item\">\n\t\t\t\t<NcSelect v-model=\"newUser.subAdminsGroups\"\n\t\t\t\t\tclass=\"dialog__select\"\n\t\t\t\t\t:input-label=\"t('settings', 'Administered groups')\"\n\t\t\t\t\t:placeholder=\"t('settings', 'Set account as admin for â€¦')\"\n\t\t\t\t\t:options=\"subAdminsGroups\"\n\t\t\t\t\t:close-on-select=\"false\"\n\t\t\t\t\t:multiple=\"true\"\n\t\t\t\t\tlabel=\"name\" />\n\t\t\t</div>\n\t\t\t<div class=\"dialog__item\">\n\t\t\t\t<NcSelect v-model=\"newUser.quota\"\n\t\t\t\t\tclass=\"dialog__select\"\n\t\t\t\t\t:input-label=\"t('settings', 'Quota')\"\n\t\t\t\t\t:placeholder=\"t('settings', 'Set account quota')\"\n\t\t\t\t\t:options=\"quotaOptions\"\n\t\t\t\t\t:clearable=\"false\"\n\t\t\t\t\t:taggable=\"true\"\n\t\t\t\t\t:create-option=\"validateQuota\" />\n\t\t\t</div>\n\t\t\t<div v-if=\"showConfig.showLanguages\"\n\t\t\t\tclass=\"dialog__item\">\n\t\t\t\t<NcSelect\tv-model=\"newUser.language\"\n\t\t\t\t\tclass=\"dialog__select\"\n\t\t\t\t\t:input-label=\"t('settings', 'Language')\"\n\t\t\t\t\t:placeholder=\"t('settings', 'Set default language')\"\n\t\t\t\t\t:clearable=\"false\"\n\t\t\t\t\t:selectable=\"option => !option.languages\"\n\t\t\t\t\t:filter-by=\"languageFilterBy\"\n\t\t\t\t\t:options=\"languages\"\n\t\t\t\t\tlabel=\"name\" />\n\t\t\t</div>\n\t\t\t<div :class=\"['dialog__item dialog__managers', { 'icon-loading-small': loading.manager }]\">\n\t\t\t\t<NcSelect v-model=\"newUser.manager\"\n\t\t\t\t\tclass=\"dialog__select\"\n\t\t\t\t\t:input-label=\"managerInputLabel\"\n\t\t\t\t\t:placeholder=\"managerLabel\"\n\t\t\t\t\t:options=\"possibleManagers\"\n\t\t\t\t\t:user-select=\"true\"\n\t\t\t\t\tlabel=\"displayname\"\n\t\t\t\t\t@search=\"searchUserManager\" />\n\t\t\t</div>\n\t\t</form>\n\n\t\t<template #actions>\n\t\t\t<NcButton class=\"dialog__submit\"\n\t\t\t\tdata-test=\"submit\"\n\t\t\t\tform=\"new-user-form\"\n\t\t\t\ttype=\"primary\"\n\t\t\t\tnative-type=\"submit\">\n\t\t\t\t{{ t('settings', 'Add new account') }}\n\t\t\t</NcButton>\n\t\t</template>\n\t</NcDialog>\n</template>\n\n<script>\nimport NcButton from '@nextcloud/vue/dist/Components/NcButton.js'\nimport NcDialog from '@nextcloud/vue/dist/Components/NcDialog.js'\nimport NcPasswordField from '@nextcloud/vue/dist/Components/NcPasswordField.js'\nimport NcSelect from '@nextcloud/vue/dist/Components/NcSelect.js'\nimport NcTextField from '@nextcloud/vue/dist/Components/NcTextField.js'\n\nexport default {\n\tname: 'NewUserDialog',\n\n\tcomponents: {\n\t\tNcButton,\n\t\tNcDialog,\n\t\tNcPasswordField,\n\t\tNcSelect,\n\t\tNcTextField,\n\t},\n\n\tprops: {\n\t\tloading: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\n\t\tnewUser: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\n\t\tquotaOptions: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tpossibleManagers: [],\n\t\t\t// TRANSLATORS This string describes a manager in the context of an organization\n\t\t\tmanagerInputLabel: t('settings', 'Manager'),\n\t\t\t// TRANSLATORS This string describes a manager in the context of an organization\n\t\t\tmanagerLabel: t('settings', 'Set account manager'),\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tshowConfig() {\n\t\t\treturn this.$store.getters.getShowConfig\n\t\t},\n\n\t\tsettings() {\n\t\t\treturn this.$store.getters.getServerData\n\t\t},\n\n\t\tusernameLabel() {\n\t\t\tif (this.settings.newUserGenerateUserID) {\n\t\t\t\treturn t('settings', 'Account name will be autogenerated')\n\t\t\t}\n\t\t\treturn t('settings', 'Account name (required)')\n\t\t},\n\n\t\tminPasswordLength() {\n\t\t\treturn this.$store.getters.getPasswordPolicyMinLength\n\t\t},\n\n\t\tgroups() {\n\t\t\t// data provided php side + remove the disabled group\n\t\t\treturn this.$store.getters.getGroups\n\t\t\t\t.filter(group => group.id !== 'disabled')\n\t\t\t\t.sort((a, b) => a.name.localeCompare(b.name))\n\t\t},\n\n\t\tsubAdminsGroups() {\n\t\t\t// data provided php side\n\t\t\treturn this.$store.getters.getSubadminGroups\n\t\t},\n\n\t\tcanAddGroups() {\n\t\t\t// disabled if no permission to add new users to group\n\t\t\treturn this.groups.map(group => {\n\t\t\t\t// clone object because we don't want\n\t\t\t\t// to edit the original groups\n\t\t\t\tgroup = Object.assign({}, group)\n\t\t\t\tgroup.$isDisabled = group.canAdd === false\n\t\t\t\treturn group\n\t\t\t})\n\t\t},\n\n\t\tlanguages() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tname: t('settings', 'Common languages'),\n\t\t\t\t\tlanguages: this.settings.languages.commonLanguages,\n\t\t\t\t},\n\t\t\t\t...this.settings.languages.commonLanguages,\n\t\t\t\t{\n\t\t\t\t\tname: t('settings', 'Other languages'),\n\t\t\t\t\tlanguages: this.settings.languages.otherLanguages,\n\t\t\t\t},\n\t\t\t\t...this.settings.languages.otherLanguages,\n\t\t\t]\n\t\t},\n\t},\n\n\tasync beforeMount() {\n\t\tawait this.searchUserManager()\n\t},\n\n\tmounted() {\n\t\tthis.$refs.username?.focus?.()\n\t},\n\n\tmethods: {\n\t\tasync createUser() {\n\t\t\tthis.loading.all = true\n\t\t\ttry {\n\t\t\t\tawait this.$store.dispatch('addUser', {\n\t\t\t\t\tuserid: this.newUser.id,\n\t\t\t\t\tpassword: this.newUser.password,\n\t\t\t\t\tdisplayName: this.newUser.displayName,\n\t\t\t\t\temail: this.newUser.mailAddress,\n\t\t\t\t\tgroups: this.newUser.groups.map(group => group.id),\n\t\t\t\t\tsubadmin: this.newUser.subAdminsGroups.map(group => group.id),\n\t\t\t\t\tquota: this.newUser.quota.id,\n\t\t\t\t\tlanguage: this.newUser.language.code,\n\t\t\t\t\tmanager: this.newUser.manager.id,\n\t\t\t\t})\n\n\t\t\t\tthis.$emit('reset')\n\t\t\t\tthis.$refs.username?.focus?.()\n\t\t\t\tthis.$emit('closing')\n\t\t\t} catch (error) {\n\t\t\t\tthis.loading.all = false\n\t\t\t\tif (error.response && error.response.data && error.response.data.ocs && error.response.data.ocs.meta) {\n\t\t\t\t\tconst statuscode = error.response.data.ocs.meta.statuscode\n\t\t\t\t\tif (statuscode === 102) {\n\t\t\t\t\t\t// wrong username\n\t\t\t\t\t\tthis.$refs.username?.focus?.()\n\t\t\t\t\t} else if (statuscode === 107) {\n\t\t\t\t\t\t// wrong password\n\t\t\t\t\t\tthis.$refs.password?.focus?.()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\thandleGroupInput(groups) {\n\t\t\t/**\n\t\t\t * Filter out groups with no id to prevent duplicate selected options\n\t\t\t *\n\t\t\t * Created groups are added programmatically by `createGroup()`\n\t\t\t */\n\t\t\t this.newUser.groups = groups.filter(group => Boolean(group.id))\n\t\t},\n\n\t\t/**\n\t\t * Create a new group\n\t\t *\n\t\t * @param {any} group Group\n\t\t * @param {string} group.name Group id\n\t\t */\n\t\tasync createGroup({ name: gid }) {\n\t\t\tthis.loading.groups = true\n\t\t\ttry {\n\t\t\t\tawait this.$store.dispatch('addGroup', gid)\n\t\t\t\tthis.newUser.groups.push(this.groups.find(group => group.id === gid))\n\t\t\t\tthis.loading.groups = false\n\t\t\t} catch (error) {\n\t\t\t\tthis.loading.groups = false\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Validate quota string to make sure it's a valid human file size\n\t\t *\n\t\t * @param {string} quota Quota in readable format '5 GB'\n\t\t * @return {object}\n\t\t */\n\t\tvalidateQuota(quota) {\n\t\t\t// only used for new presets sent through @Tag\n\t\t\tconst validQuota = OC.Util.computerFileSize(quota)\n\t\t\tif (validQuota !== null && validQuota >= 0) {\n\t\t\t\t// unify format output\n\t\t\t\tquota = OC.Util.humanFileSize(OC.Util.computerFileSize(quota))\n\t\t\t\tthis.newUser.quota = { id: quota, label: quota }\n\t\t\t\treturn this.newUser.quota\n\t\t\t}\n\t\t\t// Default is unlimited\n\t\t\tthis.newUser.quota = this.quotaOptions[0]\n\t\t\treturn this.quotaOptions[0]\n\t\t},\n\n\t\tlanguageFilterBy(option, label, search) {\n\t\t\t// Show group header of the language\n\t\t\tif (option.languages) {\n\t\t\t\treturn option.languages.some(\n\t\t\t\t\t({ name }) => name.toLocaleLowerCase().includes(search.toLocaleLowerCase()),\n\t\t\t\t)\n\t\t\t}\n\n\t\t\treturn (label || '').toLocaleLowerCase().includes(search.toLocaleLowerCase())\n\t\t},\n\n\t\tasync searchUserManager(query) {\n\t\t\tawait this.$store.dispatch(\n\t\t\t\t'searchUsers',\n\t\t\t\t{\n\t\t\t\t\toffset: 0,\n\t\t\t\t\tlimit: 10,\n\t\t\t\t\tsearch: query,\n\t\t\t\t},\n\t\t\t).then(response => {\n\t\t\t\tconst users = response?.data ? Object.values(response?.data.ocs.data.users) : []\n\t\t\t\tif (users.length > 0) {\n\t\t\t\t\tthis.possibleManagers = users\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dialog {\n\t&__form {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tpadding: 0 8px;\n\t\tgap: 4px 0;\n\t}\n\n\t&__item {\n\t\twidth: 100%;\n\n\t\t&:not(:focus):not(:active) {\n\t\t\tborder-color: var(--color-border-dark);\n\t\t}\n\t}\n\n\t&__hint {\n\t\tcolor: var(--color-text-maxcontrast);\n\t\tmargin-top: 8px;\n\t\talign-self: flex-start;\n\t}\n\n\t&__label {\n\t\tdisplay: block;\n\t\tpadding: 4px 0;\n\t}\n\n\t&__select {\n\t\twidth: 100%;\n\t}\n\n\t&__managers {\n\t\tmargin-bottom: 12px;\n\t}\n\n\t&__submit {\n\t\tmargin-top: 4px;\n\t\tmargin-bottom: 8px;\n\t}\n\n\t:deep {\n\t\t.dialog__actions {\n\t\t\tmargin: auto;\n\t\t}\n\t}\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<tr class=\"footer\">\n\t\t<th scope=\"row\">\n\t\t\t<!-- TRANSLATORS Label for a table footer which summarizes the columns of the table -->\n\t\t\t<span class=\"hidden-visually\">{{ t('settings', 'Total rows summary') }}</span>\n\t\t</th>\n\t\t<td class=\"footer__cell footer__cell--loading\">\n\t\t\t<NcLoadingIcon v-if=\"loading\"\n\t\t\t\t:title=\"t('settings', 'Loading accounts â€¦')\"\n\t\t\t\t:size=\"32\" />\n\t\t</td>\n\t\t<td class=\"footer__cell footer__cell--count footer__cell--multiline\">\n\t\t\t<span aria-describedby=\"user-count-desc\">{{ userCount }}</span>\n\t\t\t<span id=\"user-count-desc\"\n\t\t\t\tclass=\"hidden-visually\">\n\t\t\t\t{{ t('settings', 'Scroll to load more rows') }}\n\t\t\t</span>\n\t\t</td>\n\t</tr>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport NcLoadingIcon from '@nextcloud/vue/dist/Components/NcLoadingIcon.js'\n\nimport {\n\ttranslate as t,\n\ttranslatePlural as n,\n} from '@nextcloud/l10n'\n\nexport default Vue.extend({\n\tname: 'UserListFooter',\n\n\tcomponents: {\n\t\tNcLoadingIcon,\n\t},\n\n\tprops: {\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t\tfilteredUsers: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t},\n\n\tcomputed: {\n\t\tuserCount(): string {\n\t\t\tif (this.loading) {\n\t\t\t\treturn this.n(\n\t\t\t\t\t'settings',\n\t\t\t\t\t'{userCount} account â€¦',\n\t\t\t\t\t'{userCount} accounts â€¦',\n\t\t\t\t\tthis.filteredUsers.length,\n\t\t\t\t\t{\n\t\t\t\t\t\tuserCount: this.filteredUsers.length,\n\t\t\t\t\t},\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn this.n(\n\t\t\t\t'settings',\n\t\t\t\t'{userCount} account',\n\t\t\t\t'{userCount} accounts',\n\t\t\t\t this.filteredUsers.length,\n\t\t\t\t{\n\t\t\t\t\tuserCount: this.filteredUsers.length,\n\t\t\t\t},\n\t\t\t)\n\t\t},\n\t},\n\n\tmethods: {\n\t\tt,\n\t\tn,\n\t},\n})\n</script>\n\n<style lang=\"scss\" scoped>\n@import './shared/styles.scss';\n\n.footer {\n\t@include row;\n\t@include cell;\n\n\t&__cell {\n\t\tposition: sticky;\n\t\tcolor: var(--color-text-maxcontrast);\n\n\t\t&--loading {\n\t\t\tleft: 0;\n\t\t\tmin-width: var(--avatar-cell-width);\n\t\t\twidth: var(--avatar-cell-width);\n\t\t\talign-items: center;\n\t\t\tpadding: 0;\n\t\t}\n\n\t\t&--count {\n\t\t\tleft: var(--avatar-cell-width);\n\t\t\tmin-width: var(--cell-width);\n\t\t\twidth: var(--cell-width);\n\t\t}\n\t}\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<tr class=\"header\">\n\t\t<th class=\"header__cell header__cell--avatar\"\n\t\t\tdata-cy-user-list-header-avatar\n\t\t\tscope=\"col\">\n\t\t\t<span class=\"hidden-visually\">\n\t\t\t\t{{ t('settings', 'Avatar') }}\n\t\t\t</span>\n\t\t</th>\n\t\t<th class=\"header__cell header__cell--displayname\"\n\t\t\tdata-cy-user-list-header-displayname\n\t\t\tscope=\"col\">\n\t\t\t<strong>\n\t\t\t\t{{ t('settings', 'Display name') }}\n\t\t\t</strong>\n\t\t</th>\n\t\t<th class=\"header__cell header__cell--username\"\n\t\t\tdata-cy-user-list-header-username\n\t\t\tscope=\"col\">\n\t\t\t<span>\n\t\t\t\t{{ t('settings', 'Account name') }}\n\t\t\t</span>\n\t\t</th>\n\t\t<th class=\"header__cell\"\n\t\t\t:class=\"{ 'header__cell--obfuscated': hasObfuscated }\"\n\t\t\tdata-cy-user-list-header-password\n\t\t\tscope=\"col\">\n\t\t\t<span>{{ passwordLabel }}</span>\n\t\t</th>\n\t\t<th class=\"header__cell\"\n\t\t\tdata-cy-user-list-header-email\n\t\t\tscope=\"col\">\n\t\t\t<span>{{ t('settings', 'Email') }}</span>\n\t\t</th>\n\t\t<th class=\"header__cell header__cell--large\"\n\t\t\tdata-cy-user-list-header-groups\n\t\t\tscope=\"col\">\n\t\t\t<span>{{ t('settings', 'Groups') }}</span>\n\t\t</th>\n\t\t<th v-if=\"subAdminsGroups.length > 0 && settings.isAdmin\"\n\t\t\tclass=\"header__cell header__cell--large\"\n\t\t\tdata-cy-user-list-header-subadmins\n\t\t\tscope=\"col\">\n\t\t\t<span>{{ t('settings', 'Group admin for') }}</span>\n\t\t</th>\n\t\t<th class=\"header__cell\"\n\t\t\tdata-cy-user-list-header-quota\n\t\t\tscope=\"col\">\n\t\t\t<span>{{ t('settings', 'Quota') }}</span>\n\t\t</th>\n\t\t<th v-if=\"showConfig.showLanguages\"\n\t\t\tclass=\"header__cell header__cell--large\"\n\t\t\tdata-cy-user-list-header-languages\n\t\t\tscope=\"col\">\n\t\t\t<span>{{ t('settings', 'Language') }}</span>\n\t\t</th>\n\t\t<th v-if=\"showConfig.showUserBackend || showConfig.showStoragePath\"\n\t\t\tclass=\"header__cell header__cell--large\"\n\t\t\tdata-cy-user-list-header-storage-location\n\t\t\tscope=\"col\">\n\t\t\t<span v-if=\"showConfig.showUserBackend\">\n\t\t\t\t{{ t('settings', 'Account backend') }}\n\t\t\t</span>\n\t\t\t<span v-if=\"showConfig.showStoragePath\"\n\t\t\t\tclass=\"header__subtitle\">\n\t\t\t\t{{ t('settings', 'Storage location') }}\n\t\t\t</span>\n\t\t</th>\n\t\t<th v-if=\"showConfig.showLastLogin\"\n\t\t\tclass=\"header__cell\"\n\t\t\tdata-cy-user-list-header-last-login\n\t\t\tscope=\"col\">\n\t\t\t<span>{{ t('settings', 'Last login') }}</span>\n\t\t</th>\n\t\t<th class=\"header__cell header__cell--large header__cell--fill\"\n\t\t\tdata-cy-user-list-header-manager\n\t\t\tscope=\"col\">\n\t\t\t<!-- TRANSLATORS This string describes a manager in the context of an organization -->\n\t\t\t<span>{{ t('settings', 'Manager') }}</span>\n\t\t</th>\n\t\t<th class=\"header__cell header__cell--actions\"\n\t\t\tdata-cy-user-list-header-actions\n\t\t\tscope=\"col\">\n\t\t\t<span class=\"hidden-visually\">\n\t\t\t\t{{ t('settings', 'Account actions') }}\n\t\t\t</span>\n\t\t</th>\n\t</tr>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\n\nimport { translate as t } from '@nextcloud/l10n'\n\nexport default Vue.extend({\n\tname: 'UserListHeader',\n\n\tprops: {\n\t\thasObfuscated: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t},\n\n\tcomputed: {\n\t\tshowConfig() {\n\t\t\t// @ts-expect-error: allow untyped $store\n\t\t\treturn this.$store.getters.getShowConfig\n\t\t},\n\n\t\tsettings() {\n\t\t\t// @ts-expect-error: allow untyped $store\n\t\t\treturn this.$store.getters.getServerData\n\t\t},\n\n\t\tsubAdminsGroups() {\n\t\t\t// @ts-expect-error: allow untyped $store\n\t\t\treturn this.$store.getters.getSubadminGroups\n\t\t},\n\n\t\tpasswordLabel(): string {\n\t\t\tif (this.hasObfuscated) {\n\t\t\t\t// TRANSLATORS This string is for a column header labelling either a password or a message that the current user has insufficient permissions\n\t\t\t\treturn t('settings', 'Password or insufficient permissions message')\n\t\t\t}\n\t\t\treturn t('settings', 'Password')\n\t\t},\n\t},\n\n\tmethods: {\n\t\tt,\n\t},\n})\n</script>\n\n<style lang=\"scss\" scoped>\n@import './shared/styles.scss';\n\n.header {\n\t@include row;\n\t@include cell;\n\n\tborder-bottom: 1px solid var(--color-border);\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<NcActions :aria-label=\"t('settings', 'Toggle account actions menu')\"\n\t\t:disabled=\"disabled\"\n\t\t:inline=\"1\">\n\t\t<NcActionButton :data-cy-user-list-action-toggle-edit=\"`${edit}`\"\n\t\t\t:disabled=\"disabled\"\n\t\t\t@click=\"toggleEdit\">\n\t\t\t{{ edit ? t('settings', 'Done') : t('settings', 'Edit') }}\n\t\t\t<template #icon>\n\t\t\t\t<NcIconSvgWrapper :key=\"editSvg\" :svg=\"editSvg\" aria-hidden=\"true\" />\n\t\t\t</template>\n\t\t</NcActionButton>\n\t\t<NcActionButton v-for=\"({ action, icon, text }, index) in actions\"\n\t\t\t:key=\"index\"\n\t\t\t:disabled=\"disabled\"\n\t\t\t:aria-label=\"text\"\n\t\t\t:icon=\"icon\"\n\t\t\t@click=\"(event) => action(event, { ...user })\">\n\t\t\t{{ text }}\n\t\t</NcActionButton>\n\t</NcActions>\n</template>\n\n<script lang=\"ts\">\nimport type { PropType } from 'vue'\nimport { defineComponent } from 'vue'\n\nimport NcActionButton from '@nextcloud/vue/dist/Components/NcActionButton.js'\nimport NcActions from '@nextcloud/vue/dist/Components/NcActions.js'\nimport NcIconSvgWrapper from '@nextcloud/vue/dist/Components/NcIconSvgWrapper.js'\nimport SvgCheck from '@mdi/svg/svg/check.svg?raw'\nimport SvgPencil from '@mdi/svg/svg/pencil.svg?raw'\n\ninterface UserAction {\n\taction: (event: MouseEvent, user: Record<string, unknown>) => void,\n\ticon: string,\n\ttext: string\n}\n\nexport default defineComponent({\n\tcomponents: {\n\t\tNcActionButton,\n\t\tNcActions,\n\t\tNcIconSvgWrapper,\n\t},\n\n\tprops: {\n\t\t/**\n\t\t * Array of user actions\n\t\t */\n\t\tactions: {\n\t\t\ttype: Array as PropType<readonly UserAction[]>,\n\t\t\trequired: true,\n\t\t},\n\n\t\t/**\n\t\t * The state whether the row is currently disabled\n\t\t */\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\n\t\t/**\n\t\t * The state whether the row is currently edited\n\t\t */\n\t\tedit: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\n\t\t/**\n\t\t * Target of this actions\n\t\t */\n\t\tuser: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\n\tcomputed: {\n\t\t/**\n\t\t * Current MDI logo to show for edit toggle\n\t\t */\n\t\teditSvg() {\n\t\t\treturn this.edit ? SvgCheck : SvgPencil\n\t\t},\n\t},\n\n\tmethods: {\n\t\t/**\n\t\t * Toggle edit mode by emitting the update event\n\t\t */\n\t\ttoggleEdit() {\n\t\t\tthis.$emit('update:edit', !this.edit)\n\t\t},\n\t},\n})\n</script>\n","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nexport default {\n\tprops: {\n\t\tuser: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t\tsettings: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => ({}),\n\t\t},\n\t\tgroups: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => [],\n\t\t},\n\t\tsubAdminsGroups: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => [],\n\t\t},\n\t\tquotaOptions: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => [],\n\t\t},\n\t\tlanguages: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t\texternalActions: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => [],\n\t\t},\n\t},\n\tcomputed: {\n\t\tshowConfig() {\n\t\t\treturn this.$store.getters.getShowConfig\n\t\t},\n\n\t\t/* GROUPS MANAGEMENT */\n\t\tuserGroups() {\n\t\t\tconst userGroups = this.groups.filter(group => this.user.groups.includes(group.id))\n\t\t\treturn userGroups\n\t\t},\n\t\tuserSubAdminsGroups() {\n\t\t\tconst userSubAdminsGroups = this.subAdminsGroups.filter(group => this.user.subadmin.includes(group.id))\n\t\t\treturn userSubAdminsGroups\n\t\t},\n\t\tavailableGroups() {\n\t\t\treturn this.groups.map((group) => {\n\t\t\t\t// clone object because we don't want\n\t\t\t\t// to edit the original groups\n\t\t\t\tconst groupClone = Object.assign({}, group)\n\n\t\t\t\t// two settings here:\n\t\t\t\t// 1. user NOT in group but no permission to add\n\t\t\t\t// 2. user is in group but no permission to remove\n\t\t\t\tgroupClone.$isDisabled\n\t\t\t\t\t= (group.canAdd === false\n\t\t\t\t\t\t&& !this.user.groups.includes(group.id))\n\t\t\t\t\t|| (group.canRemove === false\n\t\t\t\t\t\t&& this.user.groups.includes(group.id))\n\t\t\t\treturn groupClone\n\t\t\t})\n\t\t},\n\n\t\t/* QUOTA MANAGEMENT */\n\t\tusedSpace() {\n\t\t\tif (this.user.quota.used) {\n\t\t\t\treturn t('settings', '{size} used', { size: OC.Util.humanFileSize(this.user.quota.used) })\n\t\t\t}\n\t\t\treturn t('settings', '{size} used', { size: OC.Util.humanFileSize(0) })\n\t\t},\n\t\tusedQuota() {\n\t\t\tlet quota = this.user.quota.quota\n\t\t\tif (quota > 0) {\n\t\t\t\tquota = Math.min(100, Math.round(this.user.quota.used / quota * 100))\n\t\t\t} else {\n\t\t\t\tconst usedInGB = this.user.quota.used / (10 * Math.pow(2, 30))\n\t\t\t\t// asymptotic curve approaching 50% at 10GB to visualize used stace with infinite quota\n\t\t\t\tquota = 95 * (1 - (1 / (usedInGB + 1)))\n\t\t\t}\n\t\t\treturn isNaN(quota) ? 0 : quota\n\t\t},\n\t\t// Mapping saved values to objects\n\t\tuserQuota() {\n\t\t\tif (this.user.quota.quota >= 0) {\n\t\t\t\t// if value is valid, let's map the quotaOptions or return custom quota\n\t\t\t\tconst humanQuota = OC.Util.humanFileSize(this.user.quota.quota)\n\t\t\t\tconst userQuota = this.quotaOptions.find(quota => quota.id === humanQuota)\n\t\t\t\treturn userQuota || { id: humanQuota, label: humanQuota }\n\t\t\t} else if (this.user.quota.quota === 'default') {\n\t\t\t\t// default quota is replaced by the proper value on load\n\t\t\t\treturn this.quotaOptions[0]\n\t\t\t}\n\t\t\treturn this.quotaOptions[1] // unlimited\n\t\t},\n\n\t\t/* PASSWORD POLICY? */\n\t\tminPasswordLength() {\n\t\t\treturn this.$store.getters.getPasswordPolicyMinLength\n\t\t},\n\n\t\t/* LANGUAGE */\n\t\tuserLanguage() {\n\t\t\tconst availableLanguages = this.languages[0].languages.concat(this.languages[1].languages)\n\t\t\tconst userLang = availableLanguages.find(lang => lang.code === this.user.language)\n\t\t\tif (typeof userLang !== 'object' && this.user.language !== '') {\n\t\t\t\treturn {\n\t\t\t\t\tcode: this.user.language,\n\t\t\t\t\tname: this.user.language,\n\t\t\t\t}\n\t\t\t} else if (this.user.language === '') {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn userLang\n\t\t},\n\n\t\t/* LAST LOGIN */\n\t\tuserLastLoginTooltip() {\n\t\t\tif (this.user.lastLogin > 0) {\n\t\t\t\treturn OC.Util.formatDate(this.user.lastLogin)\n\t\t\t}\n\t\t\treturn ''\n\t\t},\n\t\tuserLastLogin() {\n\t\t\tif (this.user.lastLogin > 0) {\n\t\t\t\treturn OC.Util.relativeModifiedDate(this.user.lastLogin)\n\t\t\t}\n\t\t\treturn t('settings', 'Never')\n\t\t},\n\t},\n}\n","<!--\n  - SPDX-FileCopyrightText: 2018 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<tr class=\"user-list__row\"\n\t\t:data-cy-user-row=\"user.id\">\n\t\t<td class=\"row__cell row__cell--avatar\" data-cy-user-list-cell-avatar>\n\t\t\t<NcLoadingIcon v-if=\"isLoadingUser\"\n\t\t\t\t:name=\"t('settings', 'Loading account â€¦')\"\n\t\t\t\t:size=\"32\" />\n\t\t\t<NcAvatar v-else-if=\"visible\"\n\t\t\t\tdisable-menu\n\t\t\t\t:show-user-status=\"false\"\n\t\t\t\t:user=\"user.id\" />\n\t\t</td>\n\n\t\t<td class=\"row__cell row__cell--displayname\" data-cy-user-list-cell-displayname>\n\t\t\t<template v-if=\"editing && user.backendCapabilities.setDisplayName\">\n\t\t\t\t<NcTextField ref=\"displayNameField\"\n\t\t\t\t\tclass=\"user-row-text-field\"\n\t\t\t\t\tdata-cy-user-list-input-displayname\n\t\t\t\t\t:data-loading=\"loading.displayName || undefined\"\n\t\t\t\t\t:trailing-button-label=\"t('settings', 'Submit')\"\n\t\t\t\t\t:class=\"{ 'icon-loading-small': loading.displayName }\"\n\t\t\t\t\t:show-trailing-button=\"true\"\n\t\t\t\t\t:disabled=\"loading.displayName || isLoadingField\"\n\t\t\t\t\t:label=\"t('settings', 'Change display name')\"\n\t\t\t\t\ttrailing-button-icon=\"arrowRight\"\n\t\t\t\t\t:value.sync=\"editedDisplayName\"\n\t\t\t\t\tautocapitalize=\"off\"\n\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\tspellcheck=\"false\"\n\t\t\t\t\t@trailing-button-click=\"updateDisplayName\" />\n\t\t\t</template>\n\t\t\t<strong v-else-if=\"!isObfuscated\"\n\t\t\t\t:title=\"user.displayname?.length > 20 ? user.displayname : null\">\n\t\t\t\t{{ user.displayname }}\n\t\t\t</strong>\n\t\t</td>\n\n\t\t<td class=\"row__cell row__cell--username\" data-cy-user-list-cell-username>\n\t\t\t<span class=\"row__subtitle\">{{ user.id }}</span>\n\t\t</td>\n\n\t\t<td data-cy-user-list-cell-password\n\t\t\tclass=\"row__cell\"\n\t\t\t:class=\"{ 'row__cell--obfuscated': hasObfuscated }\">\n\t\t\t<template v-if=\"editing && settings.canChangePassword && user.backendCapabilities.setPassword\">\n\t\t\t\t<NcTextField class=\"user-row-text-field\"\n\t\t\t\t\tdata-cy-user-list-input-password\n\t\t\t\t\t:data-loading=\"loading.password || undefined\"\n\t\t\t\t\t:trailing-button-label=\"t('settings', 'Submit')\"\n\t\t\t\t\t:class=\"{'icon-loading-small': loading.password}\"\n\t\t\t\t\t:show-trailing-button=\"true\"\n\t\t\t\t\t:disabled=\"loading.password || isLoadingField\"\n\t\t\t\t\t:minlength=\"minPasswordLength\"\n\t\t\t\t\tmaxlength=\"469\"\n\t\t\t\t\t:label=\"t('settings', 'Set new password')\"\n\t\t\t\t\ttrailing-button-icon=\"arrowRight\"\n\t\t\t\t\t:value.sync=\"editedPassword\"\n\t\t\t\t\tautocapitalize=\"off\"\n\t\t\t\t\tautocomplete=\"new-password\"\n\t\t\t\t\trequired\n\t\t\t\t\tspellcheck=\"false\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t@trailing-button-click=\"updatePassword\" />\n\t\t\t</template>\n\t\t\t<span v-else-if=\"isObfuscated\">\n\t\t\t\t{{ t('settings', 'You do not have permissions to see the details of this account') }}\n\t\t\t</span>\n\t\t</td>\n\n\t\t<td class=\"row__cell\" data-cy-user-list-cell-email>\n\t\t\t<template v-if=\"editing\">\n\t\t\t\t<NcTextField class=\"user-row-text-field\"\n\t\t\t\t\t:class=\"{'icon-loading-small': loading.mailAddress}\"\n\t\t\t\t\tdata-cy-user-list-input-email\n\t\t\t\t\t:data-loading=\"loading.mailAddress || undefined\"\n\t\t\t\t\t:show-trailing-button=\"true\"\n\t\t\t\t\t:trailing-button-label=\"t('settings', 'Submit')\"\n\t\t\t\t\t:label=\"t('settings', 'Set new email address')\"\n\t\t\t\t\t:disabled=\"loading.mailAddress || isLoadingField\"\n\t\t\t\t\ttrailing-button-icon=\"arrowRight\"\n\t\t\t\t\t:value.sync=\"editedMail\"\n\t\t\t\t\tautocapitalize=\"off\"\n\t\t\t\t\tautocomplete=\"email\"\n\t\t\t\t\tspellcheck=\"false\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t@trailing-button-click=\"updateEmail\" />\n\t\t\t</template>\n\t\t\t<span v-else-if=\"!isObfuscated\"\n\t\t\t\t:title=\"user.email?.length > 20 ? user.email : null\">\n\t\t\t\t{{ user.email }}\n\t\t\t</span>\n\t\t</td>\n\n\t\t<td class=\"row__cell row__cell--large row__cell--multiline\" data-cy-user-list-cell-groups>\n\t\t\t<template v-if=\"editing\">\n\t\t\t\t<label class=\"hidden-visually\"\n\t\t\t\t\t:for=\"'groups' + uniqueId\">\n\t\t\t\t\t{{ t('settings', 'Add account to group') }}\n\t\t\t\t</label>\n\t\t\t\t<NcSelect data-cy-user-list-input-groups\n\t\t\t\t\t:data-loading=\"loading.groups || undefined\"\n\t\t\t\t\t:input-id=\"'groups' + uniqueId\"\n\t\t\t\t\t:close-on-select=\"false\"\n\t\t\t\t\t:disabled=\"isLoadingField\"\n\t\t\t\t\t:loading=\"loading.groups\"\n\t\t\t\t\t:multiple=\"true\"\n\t\t\t\t\t:append-to-body=\"false\"\n\t\t\t\t\t:options=\"availableGroups\"\n\t\t\t\t\t:placeholder=\"t('settings', 'Add account to group')\"\n\t\t\t\t\t:taggable=\"settings.isAdmin\"\n\t\t\t\t\t:value=\"userGroups\"\n\t\t\t\t\tlabel=\"name\"\n\t\t\t\t\t:no-wrap=\"true\"\n\t\t\t\t\t:create-option=\"(value) => ({ name: value, isCreating: true })\"\n\t\t\t\t\t@option:created=\"createGroup\"\n\t\t\t\t\t@option:selected=\"options => addUserGroup(options.at(-1))\"\n\t\t\t\t\t@option:deselected=\"removeUserGroup\" />\n\t\t\t</template>\n\t\t\t<span v-else-if=\"!isObfuscated\"\n\t\t\t\t:title=\"userGroupsLabels?.length > 40 ? userGroupsLabels : null\">\n\t\t\t\t{{ userGroupsLabels }}\n\t\t\t</span>\n\t\t</td>\n\n\t\t<td v-if=\"subAdminsGroups.length > 0 && settings.isAdmin\"\n\t\t\tdata-cy-user-list-cell-subadmins\n\t\t\tclass=\"row__cell row__cell--large row__cell--multiline\">\n\t\t\t<template v-if=\"editing && settings.isAdmin && subAdminsGroups.length > 0\">\n\t\t\t\t<label class=\"hidden-visually\"\n\t\t\t\t\t:for=\"'subadmins' + uniqueId\">\n\t\t\t\t\t{{ t('settings', 'Set account as admin for') }}\n\t\t\t\t</label>\n\t\t\t\t<NcSelect data-cy-user-list-input-subadmins\n\t\t\t\t\t:data-loading=\"loading.subadmins || undefined\"\n\t\t\t\t\t:input-id=\"'subadmins' + uniqueId\"\n\t\t\t\t\t:close-on-select=\"false\"\n\t\t\t\t\t:disabled=\"isLoadingField\"\n\t\t\t\t\t:loading=\"loading.subadmins\"\n\t\t\t\t\tlabel=\"name\"\n\t\t\t\t\t:append-to-body=\"false\"\n\t\t\t\t\t:multiple=\"true\"\n\t\t\t\t\t:no-wrap=\"true\"\n\t\t\t\t\t:options=\"subAdminsGroups\"\n\t\t\t\t\t:placeholder=\"t('settings', 'Set account as admin for')\"\n\t\t\t\t\t:value=\"userSubAdminsGroups\"\n\t\t\t\t\t@option:deselected=\"removeUserSubAdmin\"\n\t\t\t\t\t@option:selected=\"options => addUserSubAdmin(options.at(-1))\" />\n\t\t\t</template>\n\t\t\t<span v-else-if=\"!isObfuscated\"\n\t\t\t\t:title=\"userSubAdminsGroupsLabels?.length > 40 ? userSubAdminsGroupsLabels : null\">\n\t\t\t\t{{ userSubAdminsGroupsLabels }}\n\t\t\t</span>\n\t\t</td>\n\n\t\t<td class=\"row__cell\" data-cy-user-list-cell-quota>\n\t\t\t<template v-if=\"editing\">\n\t\t\t\t<label class=\"hidden-visually\"\n\t\t\t\t\t:for=\"'quota' + uniqueId\">\n\t\t\t\t\t{{ t('settings', 'Select account quota') }}\n\t\t\t\t</label>\n\t\t\t\t<NcSelect v-model=\"editedUserQuota\"\n\t\t\t\t\t:close-on-select=\"true\"\n\t\t\t\t\t:create-option=\"validateQuota\"\n\t\t\t\t\tdata-cy-user-list-input-quota\n\t\t\t\t\t:data-loading=\"loading.quota || undefined\"\n\t\t\t\t\t:disabled=\"isLoadingField\"\n\t\t\t\t\t:loading=\"loading.quota\"\n\t\t\t\t\t:append-to-body=\"false\"\n\t\t\t\t\t:clearable=\"false\"\n\t\t\t\t\t:input-id=\"'quota' + uniqueId\"\n\t\t\t\t\t:options=\"quotaOptions\"\n\t\t\t\t\t:placeholder=\"t('settings', 'Select account quota')\"\n\t\t\t\t\t:taggable=\"true\"\n\t\t\t\t\t@option:selected=\"setUserQuota\" />\n\t\t\t</template>\n\t\t\t<template v-else-if=\"!isObfuscated\">\n\t\t\t\t<span :id=\"'quota-progress' + uniqueId\">{{ userQuota }} ({{ usedSpace }})</span>\n\t\t\t\t<NcProgressBar :aria-labelledby=\"'quota-progress' + uniqueId\"\n\t\t\t\t\tclass=\"row__progress\"\n\t\t\t\t\t:class=\"{\n\t\t\t\t\t\t'row__progress--warn': usedQuota > 80,\n\t\t\t\t\t}\"\n\t\t\t\t\t:value=\"usedQuota\" />\n\t\t\t</template>\n\t\t</td>\n\n\t\t<td v-if=\"showConfig.showLanguages\"\n\t\t\tclass=\"row__cell row__cell--large\"\n\t\t\tdata-cy-user-list-cell-language>\n\t\t\t<template v-if=\"editing\">\n\t\t\t\t<label class=\"hidden-visually\"\n\t\t\t\t\t:for=\"'language' + uniqueId\">\n\t\t\t\t\t{{ t('settings', 'Set the language') }}\n\t\t\t\t</label>\n\t\t\t\t<NcSelect :id=\"'language' + uniqueId\"\n\t\t\t\t\tdata-cy-user-list-input-language\n\t\t\t\t\t:data-loading=\"loading.languages || undefined\"\n\t\t\t\t\t:allow-empty=\"false\"\n\t\t\t\t\t:disabled=\"isLoadingField\"\n\t\t\t\t\t:loading=\"loading.languages\"\n\t\t\t\t\t:clearable=\"false\"\n\t\t\t\t\t:append-to-body=\"false\"\n\t\t\t\t\t:options=\"availableLanguages\"\n\t\t\t\t\t:placeholder=\"t('settings', 'No language set')\"\n\t\t\t\t\t:value=\"userLanguage\"\n\t\t\t\t\tlabel=\"name\"\n\t\t\t\t\t@input=\"setUserLanguage\" />\n\t\t\t</template>\n\t\t\t<span v-else-if=\"!isObfuscated\">\n\t\t\t\t{{ userLanguage.name }}\n\t\t\t</span>\n\t\t</td>\n\n\t\t<td v-if=\"showConfig.showUserBackend || showConfig.showStoragePath\"\n\t\t\tdata-cy-user-list-cell-storage-location\n\t\t\tclass=\"row__cell row__cell--large\">\n\t\t\t<template v-if=\"!isObfuscated\">\n\t\t\t\t<span v-if=\"showConfig.showUserBackend\">{{ user.backend }}</span>\n\t\t\t\t<span v-if=\"showConfig.showStoragePath\"\n\t\t\t\t\t:title=\"user.storageLocation\"\n\t\t\t\t\tclass=\"row__subtitle\">\n\t\t\t\t\t{{ user.storageLocation }}\n\t\t\t\t</span>\n\t\t\t</template>\n\t\t</td>\n\n\t\t<td v-if=\"showConfig.showLastLogin\"\n\t\t\t:title=\"userLastLoginTooltip\"\n\t\t\tclass=\"row__cell\"\n\t\t\tdata-cy-user-list-cell-last-login>\n\t\t\t<span v-if=\"!isObfuscated\">{{ userLastLogin }}</span>\n\t\t</td>\n\n\t\t<td class=\"row__cell row__cell--large row__cell--fill\" data-cy-user-list-cell-manager>\n\t\t\t<template v-if=\"editing\">\n\t\t\t\t<label class=\"hidden-visually\"\n\t\t\t\t\t:for=\"'manager' + uniqueId\">\n\t\t\t\t\t{{ managerLabel }}\n\t\t\t\t</label>\n\t\t\t\t<NcSelect v-model=\"currentManager\"\n\t\t\t\t\tclass=\"select--fill\"\n\t\t\t\t\tdata-cy-user-list-input-manager\n\t\t\t\t\t:data-loading=\"loading.manager || undefined\"\n\t\t\t\t\t:input-id=\"'manager' + uniqueId\"\n\t\t\t\t\t:close-on-select=\"true\"\n\t\t\t\t\t:disabled=\"isLoadingField\"\n\t\t\t\t\t:append-to-body=\"false\"\n\t\t\t\t\t:loading=\"loadingPossibleManagers || loading.manager\"\n\t\t\t\t\tlabel=\"displayname\"\n\t\t\t\t\t:options=\"possibleManagers\"\n\t\t\t\t\t:placeholder=\"managerLabel\"\n\t\t\t\t\t@open=\"searchInitialUserManager\"\n\t\t\t\t\t@search=\"searchUserManager\"\n\t\t\t\t\t@option:selected=\"updateUserManager\" />\n\t\t\t</template>\n\t\t\t<span v-else-if=\"!isObfuscated\">\n\t\t\t\t{{ user.manager }}\n\t\t\t</span>\n\t\t</td>\n\n\t\t<td class=\"row__cell row__cell--actions\" data-cy-user-list-cell-actions>\n\t\t\t<UserRowActions v-if=\"visible && !isObfuscated && canEdit && !loading.all\"\n\t\t\t\t:actions=\"userActions\"\n\t\t\t\t:disabled=\"isLoadingField\"\n\t\t\t\t:edit=\"editing\"\n\t\t\t\t:user=\"user\"\n\t\t\t\t@update:edit=\"toggleEdit\" />\n\t\t</td>\n\t</tr>\n</template>\n\n<script>\nimport { formatFileSize, parseFileSize } from '@nextcloud/files'\nimport { getCurrentUser } from '@nextcloud/auth'\nimport { showSuccess, showError } from '@nextcloud/dialogs'\n\nimport NcAvatar from '@nextcloud/vue/dist/Components/NcAvatar.js'\nimport NcLoadingIcon from '@nextcloud/vue/dist/Components/NcLoadingIcon.js'\nimport NcProgressBar from '@nextcloud/vue/dist/Components/NcProgressBar.js'\nimport NcSelect from '@nextcloud/vue/dist/Components/NcSelect.js'\nimport NcTextField from '@nextcloud/vue/dist/Components/NcTextField.js'\n\nimport UserRowActions from './UserRowActions.vue'\n\nimport UserRowMixin from '../../mixins/UserRowMixin.js'\nimport { isObfuscated, unlimitedQuota } from '../../utils/userUtils.ts';\n\nexport default {\n\tname: 'UserRow',\n\n\tcomponents: {\n\t\tNcAvatar,\n\t\tNcLoadingIcon,\n\t\tNcProgressBar,\n\t\tNcSelect,\n\t\tNcTextField,\n\t\tUserRowActions,\n\t},\n\n\tmixins: [\n\t\tUserRowMixin,\n\t],\n\n\tprops: {\n\t\tuser: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t\tvisible: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t\tusers: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t\thasObfuscated: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t\tgroups: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => [],\n\t\t},\n\t\tsubAdminsGroups: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t\tquotaOptions: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t\tlanguages: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t\tsettings: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t\texternalActions: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => [],\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tselectedQuota: false,\n\t\t\trand: Math.random().toString(36).substring(2),\n\t\t\tloadingPossibleManagers: false,\n\t\t\tpossibleManagers: [],\n\t\t\tcurrentManager: '',\n\t\t\tediting: false,\n\t\t\tloading: {\n\t\t\t\tall: false,\n\t\t\t\tdisplayName: false,\n\t\t\t\tpassword: false,\n\t\t\t\tmailAddress: false,\n\t\t\t\tgroups: false,\n\t\t\t\tsubadmins: false,\n\t\t\t\tquota: false,\n\t\t\t\tdelete: false,\n\t\t\t\tdisable: false,\n\t\t\t\tlanguages: false,\n\t\t\t\twipe: false,\n\t\t\t\tmanager: false,\n\t\t\t},\n\t\t\teditedDisplayName: this.user.displayname,\n\t\t\teditedPassword: '',\n\t\t\teditedMail: this.user.email ?? '',\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tmanagerLabel() {\n\t\t\t// TRANSLATORS This string describes a person's manager in the context of an organization\n\t\t\treturn t('settings', 'Set line manager')\n\t\t},\n\n\t\tisObfuscated() {\n\t\t\treturn isObfuscated(this.user)\n\t\t},\n\n\t\tshowConfig() {\n\t\t\treturn this.$store.getters.getShowConfig\n\t\t},\n\n\t\tisLoadingUser() {\n\t\t\treturn this.loading.delete || this.loading.disable || this.loading.wipe\n\t\t},\n\n\t\tisLoadingField() {\n\t\t\treturn this.loading.delete || this.loading.disable || this.loading.all\n\t\t},\n\n\t\tuniqueId() {\n\t\t\treturn encodeURIComponent(this.user.id + this.rand)\n\t\t},\n\n\t\tuserGroupsLabels() {\n\t\t\treturn this.userGroups\n\t\t\t\t.map(group => group.name)\n\t\t\t\t.join(', ')\n\t\t},\n\n\t\tuserSubAdminsGroupsLabels() {\n\t\t\treturn this.userSubAdminsGroups\n\t\t\t\t.map(group => group.name)\n\t\t\t\t.join(', ')\n\t\t},\n\n\t\tusedSpace() {\n\t\t\tif (this.user.quota?.used) {\n\t\t\t\treturn t('settings', '{size} used', { size: formatFileSize(this.user.quota?.used) })\n\t\t\t}\n\t\t\treturn t('settings', '{size} used', { size: formatFileSize(0) })\n\t\t},\n\n\t\tcanEdit() {\n\t\t\treturn getCurrentUser().uid !== this.user.id || this.settings.isAdmin\n\t\t},\n\n\t\tuserQuota() {\n\t\t\tlet quota = this.user.quota?.quota\n\n\t\t\tif (quota === 'default') {\n\t\t\t\tquota = this.settings.defaultQuota\n\t\t\t\tif (quota !== 'none') {\n\t\t\t\t\t// convert to numeric value to match what the server would usually return\n\t\t\t\t\tquota = parseFileSize(quota, true)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// when the default quota is unlimited, the server returns -3 here, map it to \"none\"\n\t\t\tif (quota === 'none' || quota === -3) {\n\t\t\t\treturn t('settings', 'Unlimited')\n\t\t\t} else if (quota >= 0) {\n\t\t\t\treturn formatFileSize(quota)\n\t\t\t}\n\t\t\treturn formatFileSize(0)\n\t\t},\n\n\t\tuserActions() {\n\t\t\tconst actions = [\n\t\t\t\t{\n\t\t\t\t\ticon: 'icon-delete',\n\t\t\t\t\ttext: t('settings', 'Delete account'),\n\t\t\t\t\taction: this.deleteUser,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ticon: 'icon-delete',\n\t\t\t\t\ttext: t('settings', 'Disconnect all devices and delete local data'),\n\t\t\t\t\taction: this.wipeUserDevices,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ticon: this.user.enabled ? 'icon-close' : 'icon-add',\n\t\t\t\t\ttext: this.user.enabled ? t('settings', 'Disable account') : t('settings', 'Enable account'),\n\t\t\t\t\taction: this.enableDisableUser,\n\t\t\t\t},\n\t\t\t]\n\t\t\tif (this.user.email !== null && this.user.email !== '') {\n\t\t\t\tactions.push({\n\t\t\t\t\ticon: 'icon-mail',\n\t\t\t\t\ttext: t('settings', 'Resend welcome email'),\n\t\t\t\t\taction: this.sendWelcomeMail,\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn actions.concat(this.externalActions)\n\t\t},\n\n\t\t// mapping saved values to objects\n\t\teditedUserQuota: {\n\t\t\tget() {\n\t\t\t\tif (this.selectedQuota !== false) {\n\t\t\t\t\treturn this.selectedQuota\n\t\t\t\t}\n\t\t\t\tif (this.settings.defaultQuota !== unlimitedQuota.id && parseFileSize(this.settings.defaultQuota, true) >= 0) {\n\t\t\t\t\t// if value is valid, let's map the quotaOptions or return custom quota\n\t\t\t\t\treturn { id: this.settings.defaultQuota, label: this.settings.defaultQuota }\n\t\t\t\t}\n\t\t\t\treturn unlimitedQuota // unlimited\n\t\t\t},\n\t\t\tset(quota) {\n\t\t\t\tthis.selectedQuota = quota\n\t\t\t},\n\t\t},\n\n\t\tavailableLanguages() {\n\t\t\treturn this.languages[0].languages.concat(this.languages[1].languages)\n\t\t},\n\t},\n\n\tasync beforeMount() {\n\t\tif (this.user.manager) {\n\t\t\tawait this.initManager(this.user.manager)\n\t\t}\n\t},\n\n\tmethods: {\n\t\twipeUserDevices() {\n\t\t\tconst userid = this.user.id\n\t\t\tOC.dialogs.confirmDestructive(\n\t\t\t\tt('settings', 'In case of lost device or exiting the organization, this can remotely wipe the Nextcloud data from all devices associated with {userid}. Only works if the devices are connected to the internet.', { userid }),\n\t\t\t\tt('settings', 'Remote wipe of devices'),\n\t\t\t\t{\n\t\t\t\t\ttype: OC.dialogs.YES_NO_BUTTONS,\n\t\t\t\t\tconfirm: t('settings', 'Wipe {userid}\\'s devices', { userid }),\n\t\t\t\t\tconfirmClasses: 'error',\n\t\t\t\t\tcancel: t('settings', 'Cancel'),\n\t\t\t\t},\n\t\t\t\t(result) => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tthis.loading.wipe = true\n\t\t\t\t\t\tthis.loading.all = true\n\t\t\t\t\t\tthis.$store.dispatch('wipeUserDevices', userid)\n\t\t\t\t\t\t\t.then(() => showSuccess(t('settings', 'Wiped {userid}\\'s devices', { userid })), { timeout: 2000 })\n\t\t\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t\t\tthis.loading.wipe = false\n\t\t\t\t\t\t\t\tthis.loading.all = false\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttrue,\n\t\t\t)\n\t\t},\n\n\t\tfilterManagers(managers) {\n\t\t\treturn managers.filter((manager) => manager.id !== this.user.id)\n\t\t},\n\n\t\tasync initManager(userId) {\n\t\t\tawait this.$store.dispatch('getUser', userId).then(response => {\n\t\t\t\tthis.currentManager = response?.data.ocs.data\n\t\t\t})\n\t\t},\n\n\t\tasync searchInitialUserManager() {\n\t\t\tthis.loadingPossibleManagers = true\n\t\t\tawait this.searchUserManager()\n\t\t\tthis.loadingPossibleManagers = false\n\t\t},\n\n\t\tasync searchUserManager(query) {\n\t\t\tawait this.$store.dispatch('searchUsers', { offset: 0, limit: 10, search: query }).then(response => {\n\t\t\t\tconst users = response?.data ? this.filterManagers(Object.values(response?.data.ocs.data.users)) : []\n\t\t\t\tif (users.length > 0) {\n\t\t\t\t\tthis.possibleManagers = users\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\n\t\tasync updateUserManager(manager) {\n\t\t\tif (manager === null) {\n\t\t\t\tthis.currentManager = ''\n\t\t\t}\n\t\t\tthis.loading.manager = true\n\t\t\ttry {\n\t\t\t\tawait this.$store.dispatch('setUserData', {\n\t\t\t\t\tuserid: this.user.id,\n\t\t\t\t\tkey: 'manager',\n\t\t\t\t\tvalue: this.currentManager ? this.currentManager.id : '',\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\t// TRANSLATORS This string describes a line manager in the context of an organization\n\t\t\t\tshowError(t('setting', 'Failed to update line manager'))\n\t\t\t\tconsole.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loading.manager = false\n\t\t\t}\n\t\t},\n\n\t\tdeleteUser() {\n\t\t\tconst userid = this.user.id\n\t\t\tOC.dialogs.confirmDestructive(\n\t\t\t\tt('settings', 'Fully delete {userid}\\'s account including all their personal files, app data, etc.', { userid }),\n\t\t\t\tt('settings', 'Account deletion'),\n\t\t\t\t{\n\t\t\t\t\ttype: OC.dialogs.YES_NO_BUTTONS,\n\t\t\t\t\tconfirm: t('settings', 'Delete {userid}\\'s account', { userid }),\n\t\t\t\t\tconfirmClasses: 'error',\n\t\t\t\t\tcancel: t('settings', 'Cancel'),\n\t\t\t\t},\n\t\t\t\t(result) => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tthis.loading.delete = true\n\t\t\t\t\t\tthis.loading.all = true\n\t\t\t\t\t\treturn this.$store.dispatch('deleteUser', userid)\n\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\tthis.loading.delete = false\n\t\t\t\t\t\t\t\tthis.loading.all = false\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttrue,\n\t\t\t)\n\t\t},\n\n\t\tenableDisableUser() {\n\t\t\tthis.loading.delete = true\n\t\t\tthis.loading.all = true\n\t\t\tconst userid = this.user.id\n\t\t\tconst enabled = !this.user.enabled\n\t\t\treturn this.$store.dispatch('enableDisableUser', {\n\t\t\t\tuserid,\n\t\t\t\tenabled,\n\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.loading.delete = false\n\t\t\t\t\tthis.loading.all = false\n\t\t\t\t})\n\t\t},\n\n\t\t/**\n\t\t * Set user displayName\n\t\t *\n\t\t * @param {string} displayName The display name\n\t\t */\n\t\tupdateDisplayName() {\n\t\t\tthis.loading.displayName = true\n\t\t\tthis.$store.dispatch('setUserData', {\n\t\t\t\tuserid: this.user.id,\n\t\t\t\tkey: 'displayname',\n\t\t\t\tvalue: this.editedDisplayName,\n\t\t\t}).then(() => {\n\t\t\t\tthis.loading.displayName = false\n\t\t\t\tif (this.editedDisplayName === this.user.displayname) {\n\t\t\t\t\tshowSuccess(t('setting', 'Display name was successfully changed'))\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\n\t\t/**\n\t\t * Set user password\n\t\t *\n\t\t * @param {string} password The email address\n\t\t */\n\t\tupdatePassword() {\n\t\t\tthis.loading.password = true\n\t\t\tif (this.editedPassword.length === 0) {\n\t\t\t\tshowError(t('setting', \"Password can't be empty\"))\n\t\t\t\tthis.loading.password = false\n\t\t\t} else {\n\t\t\t\tthis.$store.dispatch('setUserData', {\n\t\t\t\t\tuserid: this.user.id,\n\t\t\t\t\tkey: 'password',\n\t\t\t\t\tvalue: this.editedPassword,\n\t\t\t\t}).then(() => {\n\t\t\t\t\tthis.loading.password = false\n\t\t\t\t\tthis.editedPassword = ''\n\t\t\t\t\tshowSuccess(t('setting', 'Password was successfully changed'))\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Set user mailAddress\n\t\t *\n\t\t * @param {string} mailAddress The email address\n\t\t */\n\t\tupdateEmail() {\n\t\t\tthis.loading.mailAddress = true\n\t\t\tif (this.editedMail === '') {\n\t\t\t\tshowError(t('setting', \"Email can't be empty\"))\n\t\t\t\tthis.loading.mailAddress = false\n\t\t\t\tthis.editedMail = this.user.email\n\t\t\t} else {\n\t\t\t\tthis.$store.dispatch('setUserData', {\n\t\t\t\t\tuserid: this.user.id,\n\t\t\t\t\tkey: 'email',\n\t\t\t\t\tvalue: this.editedMail,\n\t\t\t\t}).then(() => {\n\t\t\t\t\tthis.loading.mailAddress = false\n\t\t\t\t\tif (this.editedMail === this.user.email) {\n\t\t\t\t\t\tshowSuccess(t('setting', 'Email was successfully changed'))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Create a new group and add user to it\n\t\t *\n\t\t * @param {string} gid Group id\n\t\t */\n\t\tasync createGroup({ name: gid }) {\n\t\t\tthis.loading = { groups: true, subadmins: true }\n\t\t\ttry {\n\t\t\t\tawait this.$store.dispatch('addGroup', gid)\n\t\t\t\tconst userid = this.user.id\n\t\t\t\tawait this.$store.dispatch('addUserGroup', { userid, gid })\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loading = { groups: false, subadmins: false }\n\t\t\t}\n\t\t\treturn this.$store.getters.getGroups[this.groups.length]\n\t\t},\n\n\t\t/**\n\t\t * Add user to group\n\t\t *\n\t\t * @param {object} group Group object\n\t\t */\n\t\tasync addUserGroup(group) {\n\t\t\tif (group.isCreating) {\n\t\t\t\t// This is NcSelect's internal value for a new inputted group name\n\t\t\t\t// Ignore\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.loading.groups = true\n\t\t\tconst userid = this.user.id\n\t\t\tconst gid = group.id\n\t\t\tif (group.canAdd === false) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait this.$store.dispatch('addUserGroup', { userid, gid })\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loading.groups = false\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove user from group\n\t\t *\n\t\t * @param {object} group Group object\n\t\t */\n\t\tasync removeUserGroup(group) {\n\t\t\tif (group.canRemove === false) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tthis.loading.groups = true\n\t\t\tconst userid = this.user.id\n\t\t\tconst gid = group.id\n\t\t\ttry {\n\t\t\t\tawait this.$store.dispatch('removeUserGroup', {\n\t\t\t\t\tuserid,\n\t\t\t\t\tgid,\n\t\t\t\t})\n\t\t\t\tthis.loading.groups = false\n\t\t\t\t// remove user from current list if current list is the removed group\n\t\t\t\tif (this.$route.params.selectedGroup === gid) {\n\t\t\t\t\tthis.$store.commit('deleteUser', userid)\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tthis.loading.groups = false\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add user to group\n\t\t *\n\t\t * @param {object} group Group object\n\t\t */\n\t\tasync addUserSubAdmin(group) {\n\t\t\tthis.loading.subadmins = true\n\t\t\tconst userid = this.user.id\n\t\t\tconst gid = group.id\n\t\t\ttry {\n\t\t\t\tawait this.$store.dispatch('addUserSubAdmin', {\n\t\t\t\t\tuserid,\n\t\t\t\t\tgid,\n\t\t\t\t})\n\t\t\t\tthis.loading.subadmins = false\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error)\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove user from group\n\t\t *\n\t\t * @param {object} group Group object\n\t\t */\n\t\tasync removeUserSubAdmin(group) {\n\t\t\tthis.loading.subadmins = true\n\t\t\tconst userid = this.user.id\n\t\t\tconst gid = group.id\n\n\t\t\ttry {\n\t\t\t\tawait this.$store.dispatch('removeUserSubAdmin', {\n\t\t\t\t\tuserid,\n\t\t\t\t\tgid,\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loading.subadmins = false\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Dispatch quota set request\n\t\t *\n\t\t * @param {string | object} quota Quota in readable format '5 GB' or Object {id: '5 GB', label: '5GB'}\n\t\t * @return {string}\n\t\t */\n\t\tasync setUserQuota(quota = 'none') {\n\t\t\t// Make sure correct label is set for unlimited quota\n\t\t\tif (quota === 'none') {\n\t\t\t\tquota = unlimitedQuota\n\t\t\t}\n\t\t\tthis.loading.quota = true\n\n\t\t\t// ensure we only send the preset id\n\t\t\tquota = quota.id ? quota.id : quota\n\n\t\t\ttry {\n\t\t\t\t// If human readable format, convert to raw float format\n\t\t\t\t// Else just send the raw string\n\t\t\t\tconst value = (parseFileSize(quota, true) || quota).toString()\n\t\t\t\tawait this.$store.dispatch('setUserData', {\n\t\t\t\t\tuserid: this.user.id,\n\t\t\t\t\tkey: 'quota',\n\t\t\t\t\tvalue,\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error)\n\t\t\t} finally {\n\t\t\t\tthis.loading.quota = false\n\t\t\t}\n\t\t\treturn quota\n\t\t},\n\n\t\t/**\n\t\t * Validate quota string to make sure it's a valid human file size\n\t\t *\n\t\t * @param {string | object} quota Quota in readable format '5 GB' or Object {id: '5 GB', label: '5GB'}\n\t\t * @return {object} The validated quota object or unlimited quota if input is invalid\n\t\t */\n\t\tvalidateQuota(quota) {\n\t\t\tif (typeof quota === 'object') {\n\t\t\t\tquota = quota?.id || quota.label\n\t\t\t}\n\t\t\t// only used for new presets sent through @Tag\n\t\t\tconst validQuota = parseFileSize(quota, true)\n\t\t\tif (validQuota === null) {\n\t\t\t\treturn unlimitedQuota\n\t\t\t} else {\n\t\t\t\t// unify format output\n\t\t\t\tquota = formatFileSize(parseFileSize(quota, true))\n\t\t\t\treturn { id: quota, label: quota }\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Dispatch language set request\n\t\t *\n\t\t * @param {object} lang language object {code:'en', name:'English'}\n\t\t * @return {object}\n\t\t */\n\t\tasync setUserLanguage(lang) {\n\t\t\tthis.loading.languages = true\n\t\t\t// ensure we only send the preset id\n\t\t\ttry {\n\t\t\t\tawait this.$store.dispatch('setUserData', {\n\t\t\t\t\tuserid: this.user.id,\n\t\t\t\t\tkey: 'language',\n\t\t\t\t\tvalue: lang.code,\n\t\t\t\t})\n\t\t\t\tthis.loading.languages = false\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error)\n\t\t\t}\n\t\t\treturn lang\n\t\t},\n\n\t\t/**\n\t\t * Dispatch new welcome mail request\n\t\t */\n\t\tsendWelcomeMail() {\n\t\t\tthis.loading.all = true\n\t\t\tthis.$store.dispatch('sendWelcomeMail', this.user.id)\n\t\t\t\t.then(() => showSuccess(t('setting', 'Welcome mail sent!'), { timeout: 2000 }))\n\t\t\t\t.finally(() => {\n\t\t\t\t\tthis.loading.all = false\n\t\t\t\t})\n\t\t},\n\n\t\tasync toggleEdit() {\n\t\t\tthis.editing = !this.editing\n\t\t\tif (this.editing) {\n\t\t\t\tawait this.$nextTick()\n\t\t\t\tthis.$refs.displayNameField?.$refs?.inputField?.$refs?.input?.focus()\n\t\t\t}\n\t\t\tif (this.editedDisplayName !== this.user.displayname) {\n\t\t\t\tthis.editedDisplayName = this.user.displayname\n\t\t\t} else if (this.editedMail !== this.user.email) {\n\t\t\t\tthis.editedMail = this.user.email ?? ''\n\t\t\t}\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import './shared/styles.scss';\n\n.user-list__row {\n\t@include row;\n\n\t&:hover {\n\t\tbackground-color: var(--color-background-hover);\n\n\t\t.row__cell:not(.row__cell--actions) {\n\t\t\tbackground-color: var(--color-background-hover);\n\t\t}\n\t}\n\n\t// Limit width of select in fill cell\n\t.select--fill {\n\t\tmax-width: calc(var(--cell-width-large) - (2 * var(--cell-padding)));\n\t}\n}\n\n.row {\n\t@include cell;\n\n\t&__cell {\n\t\tborder-bottom: 1px solid var(--color-border);\n\n\t\t:deep {\n\t\t\t.v-select.select {\n\t\t\t\tmin-width: var(--cell-min-width);\n\t\t\t}\n\t\t}\n\t}\n\n\t&__progress {\n\t\tmargin-top: 4px;\n\n\t\t&--warn {\n\t\t\t&::-moz-progress-bar {\n\t\t\t\tbackground: var(--color-warning) !important;\n\t\t\t}\n\t\t\t&::-webkit-progress-value {\n\t\t\t\tbackground: var(--color-warning) !important;\n\t\t\t}\n\t\t}\n\t}\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2018 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<Fragment>\n\t\t<NewUserDialog v-if=\"showConfig.showNewUserForm\"\n\t\t\t:loading=\"loading\"\n\t\t\t:new-user=\"newUser\"\n\t\t\t:quota-options=\"quotaOptions\"\n\t\t\t@reset=\"resetForm\"\n\t\t\t@closing=\"closeDialog\" />\n\n\t\t<NcEmptyContent v-if=\"filteredUsers.length === 0\"\n\t\t\tclass=\"empty\"\n\t\t\t:name=\"isInitialLoad && loading.users ? null : t('settings', 'No accounts')\">\n\t\t\t<template #icon>\n\t\t\t\t<NcLoadingIcon v-if=\"isInitialLoad && loading.users\"\n\t\t\t\t\t:name=\"t('settings', 'Loading accounts â€¦')\"\n\t\t\t\t\t:size=\"64\" />\n\t\t\t\t<NcIconSvgWrapper v-else :path=\"mdiAccountGroup\" :size=\"64\" />\n\t\t\t</template>\n\t\t</NcEmptyContent>\n\n\t\t<VirtualList v-else\n\t\t\t:data-component=\"UserRow\"\n\t\t\t:data-sources=\"filteredUsers\"\n\t\t\tdata-key=\"id\"\n\t\t\tdata-cy-user-list\n\t\t\t:item-height=\"rowHeight\"\n\t\t\t:style=\"style\"\n\t\t\t:extra-props=\"{\n\t\t\t\tusers,\n\t\t\t\tsettings,\n\t\t\t\thasObfuscated,\n\t\t\t\tgroups,\n\t\t\t\tsubAdminsGroups,\n\t\t\t\tquotaOptions,\n\t\t\t\tlanguages,\n\t\t\t\texternalActions,\n\t\t\t}\"\n\t\t\t@scroll-end=\"handleScrollEnd\">\n\t\t\t<template #before>\n\t\t\t\t<caption class=\"hidden-visually\">\n\t\t\t\t\t{{ t('settings', 'List of accounts. This list is not fully rendered for performance reasons. The accounts will be rendered as you navigate through the list.') }}\n\t\t\t\t</caption>\n\t\t\t</template>\n\n\t\t\t<template #header>\n\t\t\t\t<UserListHeader :has-obfuscated=\"hasObfuscated\" />\n\t\t\t</template>\n\n\t\t\t<template #footer>\n\t\t\t\t<UserListFooter :loading=\"loading.users\"\n\t\t\t\t\t:filtered-users=\"filteredUsers\" />\n\t\t\t</template>\n\t\t</VirtualList>\n\t</Fragment>\n</template>\n\n<script>\nimport { mdiAccountGroup } from '@mdi/js'\nimport { showError } from '@nextcloud/dialogs'\nimport { subscribe, unsubscribe } from '@nextcloud/event-bus'\nimport { Fragment } from 'vue-frag'\n\nimport Vue from 'vue'\nimport NcEmptyContent from '@nextcloud/vue/dist/Components/NcEmptyContent.js'\nimport NcIconSvgWrapper from '@nextcloud/vue/dist/Components/NcIconSvgWrapper.js'\nimport NcLoadingIcon from '@nextcloud/vue/dist/Components/NcLoadingIcon.js'\n\nimport VirtualList from './Users/VirtualList.vue'\nimport NewUserDialog from './Users/NewUserDialog.vue'\nimport UserListFooter from './Users/UserListFooter.vue'\nimport UserListHeader from './Users/UserListHeader.vue'\nimport UserRow from './Users/UserRow.vue'\n\nimport { defaultQuota, isObfuscated, unlimitedQuota } from '../utils/userUtils.ts'\nimport logger from '../logger.ts'\n\nconst newUser = Object.freeze({\n\tid: '',\n\tdisplayName: '',\n\tpassword: '',\n\tmailAddress: '',\n\tgroups: [],\n\tmanager: '',\n\tsubAdminsGroups: [],\n\tquota: defaultQuota,\n\tlanguage: {\n\t\tcode: 'en',\n\t\tname: t('settings', 'Default language'),\n\t},\n})\n\nexport default {\n\tname: 'UserList',\n\n\tcomponents: {\n\t\tFragment,\n\t\tNcEmptyContent,\n\t\tNcIconSvgWrapper,\n\t\tNcLoadingIcon,\n\t\tNewUserDialog,\n\t\tUserListFooter,\n\t\tUserListHeader,\n\t\tVirtualList,\n\t},\n\n\tprops: {\n\t\tselectedGroup: {\n\t\t\ttype: String,\n\t\t\tdefault: null,\n\t\t},\n\t\texternalActions: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => [],\n\t\t},\n\t},\n\n\tsetup() {\n\t\t// non reactive properties\n\t\treturn {\n\t\t\tmdiAccountGroup,\n\t\t\trowHeight: 55,\n\n\t\t\tUserRow,\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tloading: {\n\t\t\t\tall: false,\n\t\t\t\tgroups: false,\n\t\t\t\tusers: false,\n\t\t\t},\n\t\t\tnewUser: { ...newUser },\n\t\t\tisInitialLoad: true,\n\t\t\tsearchQuery: '',\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tshowConfig() {\n\t\t\treturn this.$store.getters.getShowConfig\n\t\t},\n\n\t\tsettings() {\n\t\t\treturn this.$store.getters.getServerData\n\t\t},\n\n\t\tstyle() {\n\t\t\treturn {\n\t\t\t\t'--row-height': `${this.rowHeight}px`,\n\t\t\t}\n\t\t},\n\n\t\thasObfuscated() {\n\t\t\treturn this.filteredUsers.some(user => isObfuscated(user))\n\t\t},\n\n\t\tusers() {\n\t\t\treturn this.$store.getters.getUsers\n\t\t},\n\n\t\tfilteredUsers() {\n\t\t\tif (this.selectedGroup === 'disabled') {\n\t\t\t\treturn this.users.filter(user => user.enabled === false)\n\t\t\t}\n\t\t\tif (!this.settings.isAdmin) {\n\t\t\t\t// we don't want subadmins to edit themselves\n\t\t\t\treturn this.users.filter(user => user.enabled !== false)\n\t\t\t}\n\t\t\treturn this.users.filter(user => user.enabled !== false)\n\t\t},\n\n\t\tgroups() {\n\t\t\t// data provided php side + remove the disabled group\n\t\t\treturn this.$store.getters.getGroups\n\t\t\t\t.filter(group => group.id !== 'disabled')\n\t\t\t\t.sort((a, b) => a.name.localeCompare(b.name))\n\t\t},\n\n\t\tsubAdminsGroups() {\n\t\t\t// data provided php side\n\t\t\treturn this.$store.getters.getSubadminGroups\n\t\t},\n\n\t\tquotaOptions() {\n\t\t\t// convert the preset array into objects\n\t\t\tconst quotaPreset = this.settings.quotaPreset.reduce((acc, cur) => acc.concat({\n\t\t\t\tid: cur,\n\t\t\t\tlabel: cur,\n\t\t\t}), [])\n\t\t\t// add default presets\n\t\t\tif (this.settings.allowUnlimitedQuota) {\n\t\t\t\tquotaPreset.unshift(unlimitedQuota)\n\t\t\t}\n\t\t\tquotaPreset.unshift(defaultQuota)\n\t\t\treturn quotaPreset\n\t\t},\n\n\t\tusersOffset() {\n\t\t\treturn this.$store.getters.getUsersOffset\n\t\t},\n\n\t\tusersLimit() {\n\t\t\treturn this.$store.getters.getUsersLimit\n\t\t},\n\n\t\tdisabledUsersOffset() {\n\t\t\treturn this.$store.getters.getDisabledUsersOffset\n\t\t},\n\n\t\tdisabledUsersLimit() {\n\t\t\treturn this.$store.getters.getDisabledUsersLimit\n\t\t},\n\n\t\tusersCount() {\n\t\t\treturn this.users.length\n\t\t},\n\n\t\t/* LANGUAGES */\n\t\tlanguages() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tlabel: t('settings', 'Common languages'),\n\t\t\t\t\tlanguages: this.settings.languages.commonLanguages,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: t('settings', 'Other languages'),\n\t\t\t\t\tlanguages: this.settings.languages.otherLanguages,\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t},\n\n\twatch: {\n\t\t// watch url change and group select\n\t\tasync selectedGroup(val) {\n\t\t\tthis.isInitialLoad = true\n\t\t\t// if selected is the disabled group but it's empty\n\t\t\tawait this.redirectIfDisabled()\n\t\t\tthis.$store.commit('resetUsers')\n\t\t\tawait this.loadUsers()\n\t\t\tthis.setNewUserDefaultGroup(val)\n\t\t},\n\n\t\tfilteredUsers(filteredUsers) {\n\t\t\tlogger.debug(`${filteredUsers.length} filtered user(s)`)\n\t\t},\n\t},\n\n\tasync created() {\n\t\tawait this.loadUsers()\n\t},\n\n\tasync mounted() {\n\t\tif (!this.settings.canChangePassword) {\n\t\t\tOC.Notification.showTemporary(t('settings', 'Password change is disabled because the master key is disabled'))\n\t\t}\n\n\t\t/**\n\t\t * Reset and init new user form\n\t\t */\n\t\tthis.resetForm()\n\n\t\t/**\n\t\t * Register search\n\t\t */\n\t\tsubscribe('nextcloud:unified-search.search', this.search)\n\t\tsubscribe('nextcloud:unified-search.reset', this.resetSearch)\n\n\t\t/**\n\t\t * If disabled group but empty, redirect\n\t\t */\n\t\tawait this.redirectIfDisabled()\n\t},\n\n\tbeforeDestroy() {\n\t\tunsubscribe('nextcloud:unified-search.search', this.search)\n\t\tunsubscribe('nextcloud:unified-search.reset', this.resetSearch)\n\t},\n\n\tmethods: {\n\t\tasync handleScrollEnd() {\n\t\t\tawait this.loadUsers()\n\t\t},\n\n\t\tasync loadUsers() {\n\t\t\tthis.loading.users = true\n\t\t\ttry {\n\t\t\t\tif (this.selectedGroup === 'disabled') {\n\t\t\t\t\tawait this.$store.dispatch('getDisabledUsers', {\n\t\t\t\t\t\toffset: this.disabledUsersOffset,\n\t\t\t\t\t\tlimit: this.disabledUsersLimit,\n\t\t\t\t\t\tsearch: this.searchQuery,\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tawait this.$store.dispatch('getUsers', {\n\t\t\t\t\t\toffset: this.usersOffset,\n\t\t\t\t\t\tlimit: this.usersLimit,\n\t\t\t\t\t\tgroup: this.selectedGroup,\n\t\t\t\t\t\tsearch: this.searchQuery,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tlogger.debug(`${this.users.length} total user(s) loaded`)\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error('Failed to load accounts', { error })\n\t\t\t\tshowError('Failed to load accounts')\n\t\t\t}\n\t\t\tthis.loading.users = false\n\t\t\tthis.isInitialLoad = false\n\t\t},\n\n\t\tcloseDialog() {\n\t\t\tthis.$store.commit('setShowConfig', {\n\t\t\t\tkey: 'showNewUserForm',\n\t\t\t\tvalue: false,\n\t\t\t})\n\t\t},\n\n\t\tasync search({ query }) {\n\t\t\tthis.searchQuery = query\n\t\t\tthis.$store.commit('resetUsers')\n\t\t\tawait this.loadUsers()\n\t\t},\n\n\t\tresetSearch() {\n\t\t\tthis.search({ query: '' })\n\t\t},\n\n\t\tresetForm() {\n\t\t\t// revert form to original state\n\t\t\tthis.newUser = Object.assign({}, newUser)\n\n\t\t\t/**\n\t\t\t * Init default language from server data. The use of this.settings\n\t\t\t * requires a computed variable, which break the v-model binding of the form,\n\t\t\t * this is a much easier solution than getter and setter on a computed var\n\t\t\t */\n\t\t\tif (this.settings.defaultLanguage) {\n\t\t\t\tVue.set(this.newUser.language, 'code', this.settings.defaultLanguage)\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * In case the user directly loaded the user list within a group\n\t\t\t * the watch won't be triggered. We need to initialize it.\n\t\t\t */\n\t\t\tthis.setNewUserDefaultGroup(this.selectedGroup)\n\n\t\t\tthis.loading.all = false\n\t\t},\n\n\t\tsetNewUserDefaultGroup(value) {\n\t\t\tif (value && value.length > 0) {\n\t\t\t\t// setting new account default group to the current selected one\n\t\t\t\tconst currentGroup = this.groups.find(group => group.id === value)\n\t\t\t\tif (currentGroup) {\n\t\t\t\t\tthis.newUser.groups = [currentGroup]\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\t// fallback, empty selected group\n\t\t\tthis.newUser.groups = []\n\t\t},\n\n\t\t/**\n\t\t * If the selected group is the disabled group but the count is 0\n\t\t * redirect to the all users page.\n\t\t * we only check for 0 because we don't have the count on ldap\n\t\t * and we therefore set the usercount to -1 in this specific case\n\t\t */\n\t\tasync redirectIfDisabled() {\n\t\t\tconst allGroups = this.$store.getters.getGroups\n\t\t\tif (this.selectedGroup === 'disabled'\n\t\t\t\t\t\t&& allGroups.findIndex(group => group.id === 'disabled' && group.usercount === 0) > -1) {\n\t\t\t\t// disabled group is empty, redirection to all users\n\t\t\t\tthis.$router.push({ name: 'users' })\n\t\t\t\tawait this.loadUsers()\n\t\t\t}\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import './Users/shared/styles.scss';\n\n.empty {\n\t:deep {\n\t\t.icon-vue {\n\t\t\twidth: 64px;\n\t\t\theight: 64px;\n\n\t\t\tsvg {\n\t\t\t\tmax-width: 64px;\n\t\t\t\tmax-height: 64px;\n\t\t\t}\n\t\t}\n\t}\n}\n</style>\n","<!--\n  - SPDX-FileCopyrightText: 2018 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<NcAppContent :page-heading=\"pageHeading\">\n\t\t<UserList :selected-group=\"selectedGroupDecoded\"\n\t\t\t:external-actions=\"externalActions\" />\n\t</NcAppContent>\n</template>\n\n<script>\nimport { translate as t } from '@nextcloud/l10n'\nimport { defineComponent } from 'vue'\n\nimport NcAppContent from '@nextcloud/vue/dist/Components/NcAppContent.js'\nimport UserList from '../components/UserList.vue'\n\nexport default defineComponent({\n\tname: 'UserManagement',\n\n\tcomponents: {\n\t\tNcAppContent,\n\t\tUserList,\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\t// temporary value used for multiselect change\n\t\t\texternalActions: [],\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tpageHeading() {\n\t\t\tif (this.selectedGroupDecoded === null) {\n\t\t\t\treturn t('settings', 'Active accounts')\n\t\t\t}\n\t\t\tconst matchHeading = {\n\t\t\t\tadmin: t('settings', 'Admins'),\n\t\t\t\tdisabled: t('settings', 'Disabled accounts'),\n\t\t\t}\n\t\t\treturn matchHeading[this.selectedGroupDecoded] ?? t('settings', 'Account group: {group}', { group: this.selectedGroupDecoded })\n\t\t},\n\n\t\tselectedGroup() {\n\t\t\treturn this.$route.params.selectedGroup\n\t\t},\n\n\t\tselectedGroupDecoded() {\n\t\t\treturn this.selectedGroup ? decodeURIComponent(this.selectedGroup) : null\n\t\t},\n\t},\n\n\tbeforeMount() {\n\t\tthis.$store.commit('initGroups', {\n\t\t\tgroups: this.$store.getters.getServerData.groups,\n\t\t\torderBy: this.$store.getters.getServerData.sortGroups,\n\t\t\tuserCount: this.$store.getters.getServerData.userCount,\n\t\t})\n\t\tthis.$store.dispatch('getPasswordPolicyMinLength')\n\t},\n\n\tcreated() {\n\t\t// init the OCA.Settings.UserList object\n\t\twindow.OCA = window.OCA ?? {}\n\t\twindow.OCA.Settings = window.OCA.Settings ?? {}\n\t\twindow.OCA.Settings.UserList = window.OCA.Settings.UserList ?? {}\n\t\t// and add the registerAction method\n\t\twindow.OCA.Settings.UserList.registerAction = this.registerAction\n\t},\n\n\tmethods: {\n\t\tt,\n\n\t\t/**\n\t\t * Register a new action for the user menu\n\t\t *\n\t\t * @param {string} icon the icon class\n\t\t * @param {string} text the text to display\n\t\t * @param {Function} action the function to run\n\t\t * @return {Array}\n\t\t */\n\t\tregisterAction(icon, text, action) {\n\t\t\tthis.externalActions.push({\n\t\t\t\ticon,\n\t\t\t\ttext,\n\t\t\t\taction,\n\t\t\t})\n\t\t\treturn this.externalActions\n\t\t},\n\t},\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.app-content {\n\t// Virtual list needs to be full height and is scrollable\n\tdisplay: flex;\n\toverflow: hidden;\n\tflex-direction: column;\n\tmax-height: 100%;\n}\n</style>\n"],"names":["Vue","vElementVisibility","bufferItems","_sfc_main$7","isOverScrolled","lastIndex","hiddenAfterItems","root","tfoot","_a","thead","_b","debounce","logger","visible","_sfc_main","NcButton","NcDialog","NcPasswordField","NcSelect","NcTextField","group","a","b","error","statuscode","_d","_c","_f","_e","groups","gid","quota","validQuota","option","label","search","name","query","response","users","_sfc_main$5","NcLoadingIcon","t","n","_sfc_main$4","_sfc_main$3","defineComponent","NcActionButton","NcActions","NcIconSvgWrapper","SvgCheck","SvgPencil","UserRowMixin","groupClone","humanQuota","userLang","lang","NcAvatar","NcProgressBar","UserRowActions","isObfuscated","formatFileSize","getCurrentUser","parseFileSize","actions","unlimitedQuota","userid","result","showSuccess","managers","manager","userId","showError","enabled","value","newUser","defaultQuota","Fragment","NcEmptyContent","NewUserDialog","UserListFooter","UserListHeader","VirtualList","mdiAccountGroup","UserRow","user","quotaPreset","acc","cur","val","filteredUsers","subscribe","unsubscribe","currentGroup","allGroups","NcAppContent","UserList","icon","text","action"],"mappings":"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"}