{"version":3,"file":"files_sharing-init.mjs","sources":["../apps/files_sharing/src/services/logger.ts","../apps/files_sharing/src/services/SharingService.ts","../apps/files_sharing/src/views/shares.ts","../apps/files_sharing/src/actions/acceptShareAction.ts","../apps/files_sharing/src/actions/openInFilesAction.ts","../apps/files_sharing/src/actions/rejectShareAction.ts","../apps/files_sharing/src/actions/restoreShareAction.ts","../core/img/apps/circles.svg?raw","../apps/files_sharing/src/actions/sharingStatusAction.ts","../apps/files_sharing/src/init.ts"],"sourcesContent":["/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { getLoggerBuilder } from '@nextcloud/logger'\n\nexport default getLoggerBuilder()\n\t.setApp('files_sharing')\n\t.detectUser()\n\t.build()\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* eslint-disable camelcase, n/no-extraneous-import */\nimport type { AxiosPromise } from 'axios'\nimport type { OCSResponse } from '@nextcloud/typings/ocs'\n\nimport { Folder, File, type ContentsWithRoot } from '@nextcloud/files'\nimport { generateOcsUrl, generateRemoteUrl } from '@nextcloud/router'\nimport { getCurrentUser } from '@nextcloud/auth'\nimport axios from '@nextcloud/axios'\n\nimport logger from './logger'\n\nexport const rootPath = `/files/${getCurrentUser()?.uid}`\n\nconst headers = {\n\t'Content-Type': 'application/json',\n}\n\nconst ocsEntryToNode = function(ocsEntry: any): Folder | File | null {\n\ttry {\n\t\tconst isFolder = ocsEntry?.item_type === 'folder'\n\t\tconst hasPreview = ocsEntry?.has_preview === true\n\t\tconst Node = isFolder ? Folder : File\n\n\t\tconst fileid = ocsEntry.file_source\n\n\t\t// Generate path and strip double slashes\n\t\tconst path = ocsEntry?.path || ocsEntry.file_target\n\t\tconst source = generateRemoteUrl(`dav/${rootPath}/${path}`.replaceAll(/\\/\\//gm, '/'))\n\n\t\t// Prefer share time if more recent than item mtime\n\t\tlet mtime = ocsEntry?.item_mtime ? new Date((ocsEntry.item_mtime) * 1000) : undefined\n\t\tif (ocsEntry?.stime > (ocsEntry?.item_mtime || 0)) {\n\t\t\tmtime = new Date((ocsEntry.stime) * 1000)\n\t\t}\n\n\t\treturn new Node({\n\t\t\tid: fileid,\n\t\t\tsource,\n\t\t\towner: ocsEntry?.uid_owner,\n\t\t\tmime: ocsEntry?.mimetype,\n\t\t\tmtime,\n\t\t\tsize: ocsEntry?.item_size,\n\t\t\tpermissions: ocsEntry?.item_permissions || ocsEntry?.permissions,\n\t\t\troot: rootPath,\n\t\t\tattributes: {\n\t\t\t\t...ocsEntry,\n\t\t\t\t'has-preview': hasPreview,\n\t\t\t\t// Also check the sharingStatusAction.ts code\n\t\t\t\t'owner-id': ocsEntry?.uid_owner,\n\t\t\t\t'owner-display-name': ocsEntry?.displayname_owner,\n\t\t\t\t'share-types': ocsEntry?.share_type,\n\t\t\t\tfavorite: ocsEntry?.tags?.includes(window.OC.TAG_FAVORITE) ? 1 : 0,\n\t\t\t},\n\t\t})\n\t} catch (error) {\n\t\tlogger.error('Error while parsing OCS entry', { error })\n\t\treturn null\n\t}\n}\n\nconst getShares = function(shared_with_me = false): AxiosPromise<OCSResponse<any>> {\n\tconst url = generateOcsUrl('apps/files_sharing/api/v1/shares')\n\treturn axios.get(url, {\n\t\theaders,\n\t\tparams: {\n\t\t\tshared_with_me,\n\t\t\tinclude_tags: true,\n\t\t},\n\t})\n}\n\nconst getSharedWithYou = function(): AxiosPromise<OCSResponse<any>> {\n\treturn getShares(true)\n}\n\nconst getSharedWithOthers = function(): AxiosPromise<OCSResponse<any>> {\n\treturn getShares()\n}\n\nconst getRemoteShares = function(): AxiosPromise<OCSResponse<any>> {\n\tconst url = generateOcsUrl('apps/files_sharing/api/v1/remote_shares')\n\treturn axios.get(url, {\n\t\theaders,\n\t\tparams: {\n\t\t\tinclude_tags: true,\n\t\t},\n\t})\n}\n\nconst getPendingShares = function(): AxiosPromise<OCSResponse<any>> {\n\tconst url = generateOcsUrl('apps/files_sharing/api/v1/shares/pending')\n\treturn axios.get(url, {\n\t\theaders,\n\t\tparams: {\n\t\t\tinclude_tags: true,\n\t\t},\n\t})\n}\n\nconst getRemotePendingShares = function(): AxiosPromise<OCSResponse<any>> {\n\tconst url = generateOcsUrl('apps/files_sharing/api/v1/remote_shares/pending')\n\treturn axios.get(url, {\n\t\theaders,\n\t\tparams: {\n\t\t\tinclude_tags: true,\n\t\t},\n\t})\n}\n\nconst getDeletedShares = function(): AxiosPromise<OCSResponse<any>> {\n\tconst url = generateOcsUrl('apps/files_sharing/api/v1/deletedshares')\n\treturn axios.get(url, {\n\t\theaders,\n\t\tparams: {\n\t\t\tinclude_tags: true,\n\t\t},\n\t})\n}\n\n/**\n * Group an array of objects (here Nodes) by a key\n * and return an array of arrays of them.\n */\nconst groupBy = function(nodes: (Folder | File)[], key: string) {\n\treturn Object.values(nodes.reduce(function(acc, curr) {\n\t\t(acc[curr[key]] = acc[curr[key]] || []).push(curr)\n\t\treturn acc\n\t}, {})) as (Folder | File)[][]\n}\n\nexport const getContents = async (sharedWithYou = true, sharedWithOthers = true, pendingShares = false, deletedshares = false, filterTypes: number[] = []): Promise<ContentsWithRoot> => {\n\tconst promises = [] as AxiosPromise<OCSResponse<any>>[]\n\n\tif (sharedWithYou) {\n\t\tpromises.push(getSharedWithYou(), getRemoteShares())\n\t}\n\tif (sharedWithOthers) {\n\t\tpromises.push(getSharedWithOthers())\n\t}\n\tif (pendingShares) {\n\t\tpromises.push(getPendingShares(), getRemotePendingShares())\n\t}\n\tif (deletedshares) {\n\t\tpromises.push(getDeletedShares())\n\t}\n\n\tconst responses = await Promise.all(promises)\n\tconst data = responses.map((response) => response.data.ocs.data).flat()\n\tlet contents = data.map(ocsEntryToNode)\n\t\t.filter((node) => node !== null) as (Folder | File)[]\n\n\tif (filterTypes.length > 0) {\n\t\tcontents = contents.filter((node) => filterTypes.includes(node.attributes?.share_type))\n\t}\n\n\t// Merge duplicate shares and group their attributes\n\t// Also check the sharingStatusAction.ts code\n\tcontents = groupBy(contents, 'source').map((nodes) => {\n\t\tconst node = nodes[0]\n\t\tnode.attributes['share-types'] = nodes.map(node => node.attributes['share-types'])\n\t\treturn node\n\t})\n\n\treturn {\n\t\tfolder: new Folder({\n\t\t\tid: 0,\n\t\t\tsource: generateRemoteUrl('dav' + rootPath),\n\t\t\towner: getCurrentUser()?.uid || null,\n\t\t}),\n\t\tcontents,\n\t}\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { translate as t } from '@nextcloud/l10n'\nimport { View, getNavigation } from '@nextcloud/files'\nimport AccountClockSvg from '@mdi/svg/svg/account-clock.svg?raw'\nimport AccountGroupSvg from '@mdi/svg/svg/account-group.svg?raw'\nimport AccountPlusSvg from '@mdi/svg/svg/account-plus.svg?raw'\nimport AccountSvg from '@mdi/svg/svg/account.svg?raw'\nimport DeleteSvg from '@mdi/svg/svg/delete.svg?raw'\nimport LinkSvg from '@mdi/svg/svg/link.svg?raw'\n\nimport { getContents } from '../services/SharingService'\n\nexport const sharesViewId = 'shareoverview'\nexport const sharedWithYouViewId = 'sharingin'\nexport const sharedWithOthersViewId = 'sharingout'\nexport const sharingByLinksViewId = 'sharinglinks'\nexport const deletedSharesViewId = 'deletedshares'\nexport const pendingSharesViewId = 'pendingshares'\n\nexport default () => {\n\tconst Navigation = getNavigation()\n\tNavigation.register(new View({\n\t\tid: sharesViewId,\n\t\tname: t('files_sharing', 'Shares'),\n\t\tcaption: t('files_sharing', 'Overview of shared files.'),\n\n\t\temptyTitle: t('files_sharing', 'No shares'),\n\t\temptyCaption: t('files_sharing', 'Files and folders you shared or have been shared with you will show up here'),\n\n\t\ticon: AccountPlusSvg,\n\t\torder: 20,\n\n\t\tcolumns: [],\n\n\t\tgetContents: () => getContents(),\n\t}))\n\n\tNavigation.register(new View({\n\t\tid: sharedWithYouViewId,\n\t\tname: t('files_sharing', 'Shared with you'),\n\t\tcaption: t('files_sharing', 'List of files that are shared with you.'),\n\n\t\temptyTitle: t('files_sharing', 'Nothing shared with you yet'),\n\t\temptyCaption: t('files_sharing', 'Files and folders others shared with you will show up here'),\n\n\t\ticon: AccountSvg,\n\t\torder: 1,\n\t\tparent: sharesViewId,\n\n\t\tcolumns: [],\n\n\t\tgetContents: () => getContents(true, false, false, false),\n\t}))\n\n\tNavigation.register(new View({\n\t\tid: sharedWithOthersViewId,\n\t\tname: t('files_sharing', 'Shared with others'),\n\t\tcaption: t('files_sharing', 'List of files that you shared with others.'),\n\n\t\temptyTitle: t('files_sharing', 'Nothing shared yet'),\n\t\temptyCaption: t('files_sharing', 'Files and folders you shared will show up here'),\n\n\t\ticon: AccountGroupSvg,\n\t\torder: 2,\n\t\tparent: sharesViewId,\n\n\t\tcolumns: [],\n\n\t\tgetContents: () => getContents(false, true, false, false),\n\t}))\n\n\tNavigation.register(new View({\n\t\tid: sharingByLinksViewId,\n\t\tname: t('files_sharing', 'Shared by link'),\n\t\tcaption: t('files_sharing', 'List of files that are shared by link.'),\n\n\t\temptyTitle: t('files_sharing', 'No shared links'),\n\t\temptyCaption: t('files_sharing', 'Files and folders you shared by link will show up here'),\n\n\t\ticon: LinkSvg,\n\t\torder: 3,\n\t\tparent: sharesViewId,\n\n\t\tcolumns: [],\n\n\t\tgetContents: () => getContents(false, true, false, false, [window.OC.Share.SHARE_TYPE_LINK]),\n\t}))\n\n\tNavigation.register(new View({\n\t\tid: deletedSharesViewId,\n\t\tname: t('files_sharing', 'Deleted shares'),\n\t\tcaption: t('files_sharing', 'List of shares you left.'),\n\n\t\temptyTitle: t('files_sharing', 'No deleted shares'),\n\t\temptyCaption: t('files_sharing', 'Shares you have left will show up here'),\n\n\t\ticon: DeleteSvg,\n\t\torder: 4,\n\t\tparent: sharesViewId,\n\n\t\tcolumns: [],\n\n\t\tgetContents: () => getContents(false, false, false, true),\n\t}))\n\n\tNavigation.register(new View({\n\t\tid: pendingSharesViewId,\n\t\tname: t('files_sharing', 'Pending shares'),\n\t\tcaption: t('files_sharing', 'List of unapproved shares.'),\n\n\t\temptyTitle: t('files_sharing', 'No pending shares'),\n\t\temptyCaption: t('files_sharing', 'Shares you have received but not approved will show up here'),\n\n\t\ticon: AccountClockSvg,\n\t\torder: 5,\n\t\tparent: sharesViewId,\n\n\t\tcolumns: [],\n\n\t\tgetContents: () => getContents(false, false, true, false),\n\t}))\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport type { Node, View } from '@nextcloud/files'\n\nimport { emit } from '@nextcloud/event-bus'\nimport { generateOcsUrl } from '@nextcloud/router'\nimport { registerFileAction, FileAction } from '@nextcloud/files'\nimport { translatePlural as n } from '@nextcloud/l10n'\nimport axios from '@nextcloud/axios'\nimport CheckSvg from '@mdi/svg/svg/check.svg?raw'\n\nimport { pendingSharesViewId } from '../views/shares'\n\nexport const action = new FileAction({\n\tid: 'accept-share',\n\tdisplayName: (nodes: Node[]) => n('files_sharing', 'Accept share', 'Accept shares', nodes.length),\n\ticonSvgInline: () => CheckSvg,\n\n\tenabled: (nodes, view) => nodes.length > 0 && view.id === pendingSharesViewId,\n\n\tasync exec(node: Node) {\n\t\ttry {\n\t\t\tconst isRemote = !!node.attributes.remote\n\t\t\tconst url = generateOcsUrl('apps/files_sharing/api/v1/{shareBase}/pending/{id}', {\n\t\t\t\tshareBase: isRemote ? 'remote_shares' : 'shares',\n\t\t\t\tid: node.attributes.id,\n\t\t\t})\n\t\t\tawait axios.post(url)\n\n\t\t\t// Remove from current view\n\t\t\temit('files:node:deleted', node)\n\n\t\t\treturn true\n\t\t} catch (error) {\n\t\t\treturn false\n\t\t}\n\t},\n\tasync execBatch(nodes: Node[], view: View, dir: string) {\n\t\treturn Promise.all(nodes.map(node => this.exec(node, view, dir)))\n\t},\n\n\torder: 1,\n\tinline: () => true,\n})\n\nregisterFileAction(action)\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport type { Node } from '@nextcloud/files'\n\nimport { registerFileAction, FileAction, DefaultType } from '@nextcloud/files'\nimport { translate as t } from '@nextcloud/l10n'\n\nimport { sharesViewId, sharedWithYouViewId, sharedWithOthersViewId, sharingByLinksViewId } from '../views/shares'\n\nexport const action = new FileAction({\n\tid: 'open-in-files',\n\tdisplayName: () => t('files', 'Open in Files'),\n\ticonSvgInline: () => '',\n\n\tenabled: (nodes, view) => [\n\t\tsharesViewId,\n\t\tsharedWithYouViewId,\n\t\tsharedWithOthersViewId,\n\t\tsharingByLinksViewId,\n\t\t// Deleted and pending shares are not\n\t\t// accessible in the files app.\n\t].includes(view.id),\n\n\tasync exec(node: Node) {\n\t\twindow.OCP.Files.Router.goToRoute(\n\t\t\tnull, // use default route\n\t\t\t{ view: 'files', fileid: node.fileid },\n\t\t\t{ dir: node.dirname },\n\t\t)\n\t\treturn null\n\t},\n\n\t// Before openFolderAction\n\torder: -1000,\n\tdefault: DefaultType.HIDDEN,\n})\n\nregisterFileAction(action)\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport type { Node, View } from '@nextcloud/files'\n\nimport { emit } from '@nextcloud/event-bus'\nimport { generateOcsUrl } from '@nextcloud/router'\nimport { registerFileAction, FileAction } from '@nextcloud/files'\nimport { translatePlural as n } from '@nextcloud/l10n'\nimport axios from '@nextcloud/axios'\nimport CloseSvg from '@mdi/svg/svg/close.svg?raw'\n\nimport { pendingSharesViewId } from '../views/shares'\n\nexport const action = new FileAction({\n\tid: 'reject-share',\n\tdisplayName: (nodes: Node[]) => n('files_sharing', 'Reject share', 'Reject shares', nodes.length),\n\ticonSvgInline: () => CloseSvg,\n\n\tenabled: (nodes, view) => {\n\t\tif (view.id !== pendingSharesViewId) {\n\t\t\treturn false\n\t\t}\n\n\t\tif (nodes.length === 0) {\n\t\t\treturn false\n\t\t}\n\n\t\t// disable rejecting group shares from the pending list because they anyway\n\t\t// land back into that same list after rejecting them\n\t\tif (nodes.some(node => node.attributes.remote_id\n\t\t\t&& node.attributes.share_type === window.OC.Share.SHARE_TYPE_REMOTE_GROUP)) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn true\n\t},\n\n\tasync exec(node: Node) {\n\t\ttry {\n\t\t\tconst isRemote = !!node.attributes.remote\n\t\t\tconst url = generateOcsUrl('apps/files_sharing/api/v1/{shareBase}/{id}', {\n\t\t\t\tshareBase: isRemote ? 'remote_shares' : 'shares',\n\t\t\t\tid: node.attributes.id,\n\t\t\t})\n\t\t\tawait axios.delete(url)\n\n\t\t\t// Remove from current view\n\t\t\temit('files:node:deleted', node)\n\n\t\t\treturn true\n\t\t} catch (error) {\n\t\t\treturn false\n\t\t}\n\t},\n\tasync execBatch(nodes: Node[], view: View, dir: string) {\n\t\treturn Promise.all(nodes.map(node => this.exec(node, view, dir)))\n\t},\n\n\torder: 2,\n\tinline: () => true,\n})\n\nregisterFileAction(action)\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport type { Node, View } from '@nextcloud/files'\n\nimport { emit } from '@nextcloud/event-bus'\nimport { FileAction, registerFileAction } from '@nextcloud/files'\nimport { generateOcsUrl } from '@nextcloud/router'\nimport { translatePlural as n } from '@nextcloud/l10n'\nimport ArrowULeftTopSvg from '@mdi/svg/svg/arrow-u-left-top.svg?raw'\nimport axios from '@nextcloud/axios'\n\nimport { deletedSharesViewId } from '../views/shares'\n\nexport const action = new FileAction({\n\tid: 'restore-share',\n\tdisplayName: (nodes: Node[]) => n('files_sharing', 'Restore share', 'Restore shares', nodes.length),\n\n\ticonSvgInline: () => ArrowULeftTopSvg,\n\n\tenabled: (nodes, view) => nodes.length > 0 && view.id === deletedSharesViewId,\n\n\tasync exec(node: Node) {\n\t\ttry {\n\t\t\tconst url = generateOcsUrl('apps/files_sharing/api/v1/deletedshares/{id}', {\n\t\t\t\tid: node.attributes.id,\n\t\t\t})\n\t\t\tawait axios.post(url)\n\n\t\t\t// Remove from current view\n\t\t\temit('files:node:deleted', node)\n\n\t\t\treturn true\n\t\t} catch (error) {\n\t\t\treturn false\n\t\t}\n\t},\n\tasync execBatch(nodes: Node[], view: View, dir: string) {\n\t\treturn Promise.all(nodes.map(node => this.exec(node, view, dir)))\n\t},\n\n\torder: 1,\n\tinline: () => true,\n})\n\nregisterFileAction(action)\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M12,5.5A3.5,3.5 0 0,1 15.5,9A3.5,3.5 0 0,1 12,12.5A3.5,3.5 0 0,1 8.5,9A3.5,3.5 0 0,1 12,5.5M5,8C5.56,8 6.08,8.15 6.53,8.42C6.38,9.85 6.8,11.27 7.66,12.38C7.16,13.34 6.16,14 5,14A3,3 0 0,1 2,11A3,3 0 0,1 5,8M19,8A3,3 0 0,1 22,11A3,3 0 0,1 19,14C17.84,14 16.84,13.34 16.34,12.38C17.2,11.27 17.62,9.85 17.47,8.42C17.92,8.15 18.44,8 19,8M5.5,18.25C5.5,16.18 8.41,14.5 12,14.5C15.59,14.5 18.5,16.18 18.5,18.25V20H5.5V18.25M0,20V18.5C0,17.11 1.89,15.94 4.45,15.6C3.86,16.28 3.5,17.22 3.5,18.25V20H0M24,20H20.5V18.25C20.5,17.22 20.14,16.28 19.55,15.6C22.11,15.94 24,17.11 24,18.5V20Z\\\" /></svg>\"","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { Node, View, registerFileAction, FileAction, Permission } from '@nextcloud/files'\nimport { translate as t } from '@nextcloud/l10n'\nimport { Type } from '@nextcloud/sharing'\n\nimport AccountGroupSvg from '@mdi/svg/svg/account-group.svg?raw'\nimport AccountPlusSvg from '@mdi/svg/svg/account-plus.svg?raw'\nimport LinkSvg from '@mdi/svg/svg/link.svg?raw'\nimport CircleSvg from '../../../../core/img/apps/circles.svg?raw'\n\nimport { action as sidebarAction } from '../../../files/src/actions/sidebarAction'\nimport { generateUrl } from '@nextcloud/router'\nimport { getCurrentUser } from '@nextcloud/auth'\n\nimport './sharingStatusAction.scss'\n\nconst generateAvatarSvg = (userId: string) => {\n\tconst avatarUrl = generateUrl('/avatar/{userId}/32', { userId })\n\treturn `<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"\n\t\txmlns=\"http://www.w3.org/2000/svg\" class=\"sharing-status__avatar\">\n\t\t<image href=\"${avatarUrl}\" height=\"32\" width=\"32\" />\n\t</svg>`\n}\n\nexport const action = new FileAction({\n\tid: 'sharing-status',\n\tdisplayName(nodes: Node[]) {\n\t\tconst node = nodes[0]\n\t\tconst shareTypes = Object.values(node?.attributes?.['share-types'] || {}).flat() as number[]\n\t\tconst ownerId = node?.attributes?.['owner-id']\n\n\t\tif (shareTypes.length > 0\n\t\t\t|| (ownerId && ownerId !== getCurrentUser()?.uid)) {\n\t\t\treturn t('files_sharing', 'Shared')\n\t\t}\n\n\t\treturn ''\n\t},\n\n\ttitle(nodes: Node[]) {\n\t\tconst node = nodes[0]\n\t\tconst ownerId = node?.attributes?.['owner-id']\n\t\tconst ownerDisplayName = node?.attributes?.['owner-display-name']\n\n\t\t// Mixed share types\n\t\tif (Array.isArray(node.attributes?.['share-types'])) {\n\t\t\treturn t('files_sharing', 'Shared multiple times with different people')\n\t\t}\n\n\t\tif (ownerId && ownerId !== getCurrentUser()?.uid) {\n\t\t\treturn t('files_sharing', 'Shared by {ownerDisplayName}', { ownerDisplayName })\n\t\t}\n\n\t\treturn t('files_sharing', 'Show sharing options')\n\t},\n\n\ticonSvgInline(nodes: Node[]) {\n\t\tconst node = nodes[0]\n\t\tconst shareTypes = Object.values(node?.attributes?.['share-types'] || {}).flat() as number[]\n\n\t\t// Mixed share types\n\t\tif (Array.isArray(node.attributes?.['share-types'])) {\n\t\t\treturn AccountPlusSvg\n\t\t}\n\n\t\t// Link shares\n\t\tif (shareTypes.includes(Type.SHARE_TYPE_LINK)\n\t\t\t|| shareTypes.includes(Type.SHARE_TYPE_EMAIL)) {\n\t\t\treturn LinkSvg\n\t\t}\n\n\t\t// Group shares\n\t\tif (shareTypes.includes(Type.SHARE_TYPE_GROUP)\n\t\t\t|| shareTypes.includes(Type.SHARE_TYPE_REMOTE_GROUP)) {\n\t\t\treturn AccountGroupSvg\n\t\t}\n\n\t\t// Circle shares\n\t\tif (shareTypes.includes(Type.SHARE_TYPE_CIRCLE)) {\n\t\t\treturn CircleSvg\n\t\t}\n\n\t\tconst ownerId = node?.attributes?.['owner-id']\n\t\tif (ownerId && ownerId !== getCurrentUser()?.uid) {\n\t\t\treturn generateAvatarSvg(ownerId)\n\t\t}\n\n\t\treturn AccountPlusSvg\n\t},\n\n\tenabled(nodes: Node[]) {\n\t\tif (nodes.length !== 1) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst node = nodes[0]\n\t\tconst ownerId = node?.attributes?.['owner-id']\n\t\tconst isMixed = Array.isArray(node.attributes?.['share-types'])\n\n\t\t// If the node is shared multiple times with\n\t\t// different share types to the current user\n\t\tif (isMixed) {\n\t\t\treturn true\n\t\t}\n\n\t\t// If the node is shared by someone else\n\t\tif (ownerId && ownerId !== getCurrentUser()?.uid) {\n\t\t\treturn true\n\t\t}\n\n\t\treturn (node.permissions & Permission.SHARE) !== 0\n\t},\n\n\tasync exec(node: Node, view: View, dir: string) {\n\t\t// You need read permissions to see the sidebar\n\t\tif ((node.permissions & Permission.READ) !== 0) {\n\t\t\twindow.OCA?.Files?.Sidebar?.setActiveTab?.('sharing')\n\t\t\treturn sidebarAction.exec(node, view, dir)\n\t\t}\n\t\treturn null\n\t},\n\n\tinline: () => true,\n\n})\n\nregisterFileAction(action)\n","/**\n * @copyright Copyright (c) 2019 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n * @author Julius Härtl <jus@bitgrid.net>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { registerDavProperty } from '@nextcloud/files'\nimport registerSharingViews from './views/shares'\n\nimport './actions/acceptShareAction'\nimport './actions/openInFilesAction'\nimport './actions/rejectShareAction'\nimport './actions/restoreShareAction'\nimport './actions/sharingStatusAction'\n\nregisterSharingViews()\n\nregisterDavProperty('nc:share-attributes', { nc: 'http://nextcloud.org/ns' })\nregisterDavProperty('oc:share-types', { oc: 'http://owncloud.org/ns' })\nregisterDavProperty('ocs:share-permissions', { ocs: 'http://open-collaboration-services.org/ns' })\n"],"names":["logger","getLoggerBuilder","_a","rootPath","getCurrentUser","headers","ocsEntryToNode","ocsEntry","isFolder","hasPreview","Node","Folder","File","fileid","path","source","generateRemoteUrl","mtime","error","getShares","shared_with_me","url","generateOcsUrl","axios","getSharedWithYou","getSharedWithOthers","getRemoteShares","getPendingShares","getRemotePendingShares","getDeletedShares","groupBy","nodes","key","acc","curr","getContents","sharedWithYou","sharedWithOthers","pendingShares","deletedshares","filterTypes","promises","contents","response","node","sharesViewId","sharedWithYouViewId","sharedWithOthersViewId","sharingByLinksViewId","deletedSharesViewId","pendingSharesViewId","registerSharingViews","Navigation","getNavigation","View","t","AccountPlusSvg","AccountSvg","AccountGroupSvg","LinkSvg","DeleteSvg","AccountClockSvg","action","FileAction","n","CheckSvg","view","isRemote","emit","dir","registerFileAction","DefaultType","CloseSvg","ArrowULeftTopSvg","CircleSvg","generateAvatarSvg","userId","avatarUrl","generateUrl","_b","_c","shareTypes","ownerId","_d","ownerDisplayName","Type","Permission","sidebarAction","registerDavProperty"],"mappings":"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"}